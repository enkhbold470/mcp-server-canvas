{
	"info": {
		"_postman_id": "a1b96510-9072-48ae-bd60-9ce78b63fb33",
		"name": "Canvas",
		"description": "**API Documentation**\n\n[https://canvas.instructure.com/doc/api/](https://canvas.instructure.com/doc/api/)\n\n**Authentication of the API**\n\nPlease see [https://canvas.instructure.com/doc/api/file.oauth.html#accessing-canvas-api](https://canvas.instructure.com/doc/api/file.oauth.html#accessing-canvas-api)\n\nWhen you use this collection, you can use the generated token in the environment. In the collection, there is only one environment - Canvas. You can duplicate it to your own environment(ex: DEV). After that, you can replace canvas_token variable.\n\n**Pagination**\n\nAll get APIs are returning paginated result. You can always use **per_page** parameter to increase the size or the result set.\n\nFor more information, see [https://canvas.instructure.com/doc/api/file.pagination.html](https://canvas.instructure.com/doc/api/file.pagination.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18242782"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "Accounts",
					"item": [
						{
							"name": "Canvas - Delete a sub-account",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sub_accounts/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sub_accounts",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "2",
											"type": "string"
										},
										{
											"key": "id",
											"value": "12",
											"type": "string",
											"description": "ID of the sub account"
										}
									]
								},
								"description": "Cannot delete an account with active courses or active sub_accounts. Cannot delete a root_account"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url}}/api/v1/accounts/:account_id/sub_accounts/:id",
											"host": [
												"{{url}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sub_accounts",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "1"
												},
												{
													"key": "id",
													"value": "24"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"account\": {\n        \"name\": \"Sub sis_account_id\",\n        \"sis_account_id\": \"123ccb\",\n        \"default_storage_quota_mb\": \"20\",\n        \"default_user_storage_quota_mb\": \"20\",\n        \"default_group_storage_quota_mb\": \"20\"\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Update an Account",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"type": "string",
											"description": "Canvas ID or SIS ID"
										}
									]
								},
								"description": "Update an existing account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"name\": \"Canvas Account\",\r\n\t\"sis_account_id\": \"123xyz\",\r\n\t\"default_time_zone\": \"America/Denver\",\r\n\t\"default_storage_quota_mb\": \"50\",\r\n\t\"default_user_storage_quota_mb\": \"50\",\r\n\t\"default_group_storage_quota_mb\": \"50\",\r\n\t\"settings\": {\r\n\t\t\"restrict_student_past_view\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"restrict_student_future_view\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_all_announcements\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"usage_rights_required\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"restrict_student_future_listing\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_outcome_proficiency\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_proficiency_calculation\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t}\r\n\t},\r\n\t\"services\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "{\r\n\r\n  \"id\": 2,\r\n  \"name\": \"Canvas Account\",\r\n  \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n  \"parent_account_id\": 1,\r\n  \"root_account_id\": 1,\r\n  \"default_storage_quota_mb\": 500,\r\n  \"default_user_storage_quota_mb\": 50,\r\n  \"default_group_storage_quota_mb\": 50,\r\n  \"default_time_zone\": \"America/Denver\",\r\n  \"sis_account_id\": \"123xyz\",\r\n  \"integration_id\": \"123xyz\",\r\n  \"sis_import_id\": 12,\r\n  \"lti_guid\": \"123xyz\",\r\n  \"workflow_state\": \"active\"\r\n}"
								}
							]
						},
						{
							"name": "Canvas - Delete a user from the root account",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/users/:user_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Canvas account id or SIS ID"
										},
										{
											"key": "user_id",
											"value": "112",
											"type": "string",
											"description": "Canvas user id or SIS ID"
										}
									]
								},
								"description": "Delete a user record from a Canvas root account. If a user is associated with multiple root accounts (in a multi-tenant instance of Canvas), this action will NOT remove them from the other accounts.\n\nWARNING: This API will allow a user to remove themselves from the account. If they do this, they won't be able to make API calls or log into Canvas at that account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"name\": \"Canvas Account\",\r\n\t\"sis_account_id\": \"123xyz\",\r\n\t\"default_time_zone\": \"America/Denver\",\r\n\t\"default_storage_quota_mb\": \"50\",\r\n\t\"default_user_storage_quota_mb\": \"50\",\r\n\t\"default_group_storage_quota_mb\": \"50\",\r\n\t\"settings\": {\r\n\t\t\"restrict_student_past_view\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"restrict_student_future_view\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_all_announcements\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"usage_rights_required\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"restrict_student_future_listing\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_outcome_proficiency\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t},\r\n\t\t\"lock_proficiency_calculation\": {\r\n\t\t\t\"value\": false,\r\n\t\t\t\"locked\": true\r\n\t\t}\r\n\t},\r\n\t\"services\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "\r\n{\r\n\"id\": 2,\r\n\"name\": \"Sheldon Cooper\",\r\n\"sortable_name\": \"Cooper, Sheldon\",\r\n\"short_name\": \"Shelly\",\r\n\"sis_user_id\": \"SHEL93921\",\r\n\"sis_import_id\": 18,\r\n\"integration_id\": \"ABC59802\",\r\n\"login_id\": \"sheldon@caltech.example.com\",\r\n\"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\r\n\"enrollments\": null,\r\n\"email\": \"sheldon@caltech.example.com\",\r\n\"locale\": \"tlh\",\r\n\"last_login\": \"2012-05-30T17:45:25Z\",\r\n\"time_zone\": \"America/Denver\",\r\n\"bio\": \"I like the Muppets.\"\r\n}"
								}
							]
						},
						{
							"name": "Canvas - Get a single account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "12",
											"type": "string",
											"description": "Canvas ID or SIS ID of the Account"
										}
									]
								},
								"description": "Retrieve information on an individual account, given by id or sis sis_account_id."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/course_accounts",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"course_accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\r\n  \"id\": 2,\r\n  \"name\": \"Canvas Account\",\r\n  \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n  \"parent_account_id\": 1,\r\n  \"root_account_id\": 1,\r\n  \"workflow_state\": \"active\"\r\n}"
								}
							]
						},
						{
							"name": "Canvas - Get the sub-accounts of an account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sub_accounts?recursive=true",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sub_accounts"
									],
									"query": [
										{
											"key": "recursive",
											"value": "true",
											"description": "If true, the entire account tree underneath this account will be returned (though still paginated). If false, only direct sub-accounts of this account will be returned. Defaults to false."
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "List accounts that are sub-accounts of the given account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sub_accounts?recursive=true",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sub_accounts"
											],
											"query": [
												{
													"key": "recursive",
													"value": "true"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"type": "string",
													"description": "Canvas Account ID of Account's SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "[{\r\n\r\n  \"id\": 2,\r\n  \"name\": \"Canvas Account\",\r\n  \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n  \"parent_account_id\": 1,\r\n  \"root_account_id\": 1,\r\n  \"default_storage_quota_mb\": 500,\r\n  \"default_user_storage_quota_mb\": 50,\r\n  \"default_group_storage_quota_mb\": 50,\r\n  \"default_time_zone\": \"America/Denver\",\r\n  \"sis_account_id\": \"123xyz\",\r\n  \"integration_id\": \"123xyz\",\r\n  \"sis_import_id\": 12,\r\n  \"lti_guid\": \"123xyz\",\r\n  \"workflow_state\": \"active\"\r\n}]"
								}
							]
						},
						{
							"name": "Canvas - List accounts for course admins",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/course_accounts",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"course_accounts"
									]
								},
								"description": "A paginated list of accounts that the current user can view through their admin course enrollments. (Teacher, TA, or designer enrollments). Only returns “id”, “name”, “workflow_state”, “root_account_id” and “parent_account_id”\n\nreturns list of Accounts."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/course_accounts",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"course_accounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "[{\r\n\r\n  \"id\": 2,\r\n  \"name\": \"Canvas Account\",\r\n  \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n  \"parent_account_id\": 1,\r\n  \"root_account_id\": 1,\r\n  \"default_storage_quota_mb\": 500,\r\n  \"default_user_storage_quota_mb\": 50,\r\n  \"default_group_storage_quota_mb\": 50,\r\n  \"default_time_zone\": \"America/Denver\",\r\n  \"sis_account_id\": \"123xyz\",\r\n  \"integration_id\": \"123xyz\",\r\n  \"sis_import_id\": 12,\r\n  \"lti_guid\": \"123xyz\",\r\n  \"workflow_state\": \"active\"\r\n}]"
								}
							]
						},
						{
							"name": "Canvas - List Accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts?include[]=lti_guid&=",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts"
									],
									"query": [
										{
											"key": "include[]",
											"value": "lti_guid",
											"description": "\t\nArray of additional information to include.\n\n“lti_guid”\nthe 'tool_consumer_instance_guid' that will be sent for this account on LTI launches\n\n“registration_settings”\nreturns info about the privacy policy and terms of use\n\n“services”\nreturns services and whether they are enabled (requires account management permissions)"
										},
										{
											"key": "",
											"value": ""
										}
									]
								},
								"description": "A paginated list of accounts that the current user can view or manage. Typically, students and even teachers will get an empty list in response, only account admins can view the accounts that they are in."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts?include[]=lti_guid",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts"
											],
											"query": [
												{
													"key": "include[]",
													"value": "lti_guid",
													"description": "\t\nArray of additional information to include.\n\n“lti_guid”\nthe 'tool_consumer_instance_guid' that will be sent for this account on LTI launches\n\n“registration_settings”\nreturns info about the privacy policy and terms of use\n\n“services”\nreturns services and whether they are enabled (requires account management permissions)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "[{\r\n\r\n  \"id\": 2,\r\n  \"name\": \"Canvas Account\",\r\n  \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n  \"parent_account_id\": 1,\r\n  \"root_account_id\": 1,\r\n  \"default_storage_quota_mb\": 500,\r\n  \"default_user_storage_quota_mb\": 50,\r\n  \"default_group_storage_quota_mb\": 50,\r\n  \"default_time_zone\": \"America/Denver\",\r\n  \"sis_account_id\": \"123xyz\",\r\n  \"integration_id\": \"123xyz\",\r\n  \"sis_import_id\": 12,\r\n  \"lti_guid\": \"123xyz\",\r\n  \"workflow_state\": \"active\"\r\n}]"
								}
							]
						},
						{
							"name": "Canvas - Get Permissions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/permissions?permissions[]=manage_account_memberships",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"permissions"
									],
									"query": [
										{
											"key": "permissions[]",
											"value": "manage_account_memberships",
											"description": "List of permissions to check against the authenticated user. Permission names are documented in the Create a role endpoint."
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Canvas Account ID of Account's SIS ID"
										}
									]
								},
								"description": "Returns permission information for the calling user and the given account. You may use `self` as the account id to check permissions against the domain root account. The caller must have an account role or admin (teacher/TA/designer) enrollment in a course in the account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/course_accounts?permissions[]=manage_account_memberships",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"course_accounts"
											],
											"query": [
												{
													"key": "permissions[]",
													"value": "manage_account_memberships"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\r\n\t\"manage_account_memberships\": \"false\", \r\n\t\"become_user\": \"true\"\r\n}"
								}
							]
						},
						{
							"name": "Canvas - Get the Terms of Service",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms_of_service",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms_of_service"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Canvas Account ID or SIS ID"
										}
									]
								},
								"description": "Returns the terms of service for that account"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms_of_service",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms_of_service"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "1",
													"type": "string",
													"description": "Canvas Account ID of Account's SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\r\n  \"id\": 1,\r\n  \"terms_type\": \"default\",\r\n  \"passive\": false,\r\n  \"account_id\": 1,\r\n  \"content\": \"To be or not to be that is the question\",\r\n  \"self_registration_type\": \"[\"none\", \"observer\", \"all\"]\"\r\n}"
								}
							]
						},
						{
							"name": "Canvas - List active courses in an account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/courses?with_enrollments=true&enrollment_type[]=teacher&published=true&completed=true&blueprint=true&blueprint_associated=true&by_teachers[]=1234&by_subaccounts[]=1233&hide_enrollmentless_courses=true&state[]=created&enrollment_term_id=1&search_term=Computer&include[]&sort=course_name&order=asc&search_by=course&starts_before=2020-02-01T00:00:00.000Z&ends_after=2020-02-15T00:00:00.000Z",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"courses"
									],
									"query": [
										{
											"key": "with_enrollments",
											"value": "true",
											"description": "\t\nIf true, include only courses with at least one enrollment. If false, include only courses with no enrollments. If not present, do not filter on course enrollment status."
										},
										{
											"key": "enrollment_type[]",
											"value": "teacher",
											"description": "If set, only return courses that have at least one user enrolled in in the course with one of the specified enrollment types. Allowed values: teacher, student, ta, observer, designer"
										},
										{
											"key": "published",
											"value": "true",
											"description": "If true, include only published courses. If false, exclude published courses. If not present, do not filter on published status."
										},
										{
											"key": "completed",
											"value": "true",
											"description": "If true, include only completed courses (these may be in state 'completed', or their enrollment term may have ended). If false, exclude completed courses. If not present, do not filter on completed status."
										},
										{
											"key": "blueprint",
											"value": "true",
											"description": "If true, include only blueprint courses. If false, exclude them. If not present, do not filter on this basis"
										},
										{
											"key": "blueprint_associated",
											"value": "true",
											"description": "If true, include only courses that inherit content from a blueprint course. If false, exclude them. If not present, do not filter on this basis."
										},
										{
											"key": "by_teachers[]",
											"value": "1234",
											"description": "List of User IDs of teachers; if supplied, include only courses taught by one of the referenced users."
										},
										{
											"key": "by_subaccounts[]",
											"value": "1233",
											"description": "List of Account IDs; if supplied, include only courses associated with one of the referenced subaccounts."
										},
										{
											"key": "hide_enrollmentless_courses",
											"value": "true",
											"description": "If present, only return courses that have at least one enrollment. Equivalent to 'with_enrollments=true'; retained for compatibility"
										},
										{
											"key": "state[]",
											"value": "created",
											"description": "If set, only return courses that are in the given state(s). By default, all states but “deleted” are returned. Allowed values: created, claimed, available, completed, deleted, all"
										},
										{
											"key": "enrollment_term_id",
											"value": "1",
											"description": "If set, only includes courses from the specified term."
										},
										{
											"key": "search_term",
											"value": "Computer",
											"description": "The partial course name, code, or full ID to match and return in the results list. Must be at least 3 characters."
										},
										{
											"key": "include[]",
											"value": null,
											"description": "“sections”, “needs_grading_count” and “total_scores” are not valid options at the account level\n\nAllowed values:\nsyllabus_body, term, course_progress, storage_quota_used_mb, total_students, teachers, account_name, concluded"
										},
										{
											"key": "sort",
											"value": "course_name",
											"description": "The column to sort results by. Allowed values: course_name, sis_course_id, teacher, account_name"
										},
										{
											"key": "order",
											"value": "asc",
											"description": "The order to sort the given column by.\n\nAllowed values:\nasc, desc"
										},
										{
											"key": "search_by",
											"value": "course",
											"description": "The filter to search by. “course” searches for course names, course codes, and SIS IDs. “teacher” searches for teacher names\n\nAllowed values:\ncourse, teacher"
										},
										{
											"key": "starts_before",
											"value": "2020-02-01T00:00:00.000Z",
											"description": "If set, only return courses that start before the value (inclusive) or their enrollment term starts before the value (inclusive) or both the course's start_at and the enrollment term's start_at are set to null. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ."
										},
										{
											"key": "ends_after",
											"value": "2020-02-15T00:00:00.000Z",
											"description": "If set, only return courses that end after the value (inclusive) or their enrollment term ends after the value (inclusive) or both the course's end_at and the enrollment term's end_at are set to null. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ."
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Canvas account ID or SIS ID"
										}
									]
								},
								"description": "Retrieve a paginated list of courses in this account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/courses?with_enrollments=true&enrollment_type[]=teacher&published=true&completed=true&blueprint=true&blueprint_associated=true&by_teachers[]=1234&by_subaccounts[]=1233&hide_enrollmentless_courses=true&state[]=created&enrollment_term_id=1&search_term=Computer&include[]&sort=course_name&order=asc&search_by=course&starts_before=2020-02-01T00:00:00.000Z&ends_after=2020-02-15T00:00:00.000Z",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"courses"
											],
											"query": [
												{
													"key": "with_enrollments",
													"value": "true"
												},
												{
													"key": "enrollment_type[]",
													"value": "teacher"
												},
												{
													"key": "published",
													"value": "true"
												},
												{
													"key": "completed",
													"value": "true"
												},
												{
													"key": "blueprint",
													"value": "true"
												},
												{
													"key": "blueprint_associated",
													"value": "true"
												},
												{
													"key": "by_teachers[]",
													"value": "1234"
												},
												{
													"key": "by_subaccounts[]",
													"value": "1233"
												},
												{
													"key": "hide_enrollmentless_courses",
													"value": "true"
												},
												{
													"key": "state[]",
													"value": "created"
												},
												{
													"key": "enrollment_term_id",
													"value": "1"
												},
												{
													"key": "search_term",
													"value": "Computer"
												},
												{
													"key": "include[]",
													"value": null
												},
												{
													"key": "sort",
													"value": "course_name"
												},
												{
													"key": "order",
													"value": "asc"
												},
												{
													"key": "search_by",
													"value": "course"
												},
												{
													"key": "starts_before",
													"value": "2020-02-01T00:00:00.000Z"
												},
												{
													"key": "ends_after",
													"value": "2020-02-15T00:00:00.000Z"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Canvas Account ID of Account's SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "[\r\n  {\r\n    \"id\": 370663,\r\n    \"sis_course_id\": null,\r\n    \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n    \"integration_id\": null,\r\n    \"sis_import_id\": 34,\r\n    \"name\": \"InstructureCon 2012\",\r\n    \"course_code\": \"INSTCON12\",\r\n    \"workflow_state\": \"available\",\r\n    \"account_id\": 81259,\r\n    \"root_account_id\": 81259,\r\n    \"enrollment_term_id\": 34,\r\n    \"grading_standard_id\": 25,\r\n    \"grade_passback_setting\": \"nightly_sync\",\r\n    \"created_at\": \"2012-05-01T00:00:00-06:00\",\r\n    \"start_at\": \"2012-06-01T00:00:00-06:00\",\r\n    \"end_at\": \"2012-09-01T00:00:00-06:00\",\r\n    \"locale\": \"en\",\r\n    \"enrollments\": null,\r\n    \"total_students\": 32,\r\n    \"calendar\": null,\r\n    \"default_view\": \"feed\",\r\n    \"syllabus_body\": \"<p>syllabus html goes here</p>\",\r\n    \"needs_grading_count\": 17,\r\n    \"term\": null,\r\n    \"course_progress\": null,\r\n    \"apply_assignment_group_weights\": true,\r\n    \"permissions\": {\r\n      \"create_discussion_topic\": true,\r\n      \"create_announcement\": true\r\n    },\r\n    \"is_public\": true,\r\n    \"is_public_to_auth_users\": true,\r\n    \"public_syllabus\": true,\r\n    \"public_syllabus_to_auth\": true,\r\n    \"public_description\": \"Come one, come all to InstructureCon 2012!\",\r\n    \"storage_quota_mb\": 5,\r\n    \"storage_quota_used_mb\": 5,\r\n    \"hide_final_grades\": false,\r\n    \"license\": \"Creative Commons\",\r\n    \"allow_student_assignment_edits\": false,\r\n    \"allow_wiki_comments\": false,\r\n    \"allow_student_forum_attachments\": false,\r\n    \"open_enrollment\": true,\r\n    \"self_enrollment\": false,\r\n    \"restrict_enrollments_to_course_dates\": false,\r\n    \"course_format\": \"online\",\r\n    \"access_restricted_by_date\": false,\r\n    \"time_zone\": \"America/Denver\",\r\n    \"blueprint\": true,\r\n    \"blueprint_restrictions\": {\r\n      \"content\": true,\r\n      \"points\": true,\r\n      \"due_dates\": false,\r\n      \"availability_dates\": false\r\n    },\r\n    \"blueprint_restrictions_by_object_type\": {\r\n      \"assignment\": {\r\n        \"content\": true,\r\n        \"points\": true\r\n      },\r\n      \"wiki_page\": {\r\n        \"content\": true\r\n      }\r\n    }\r\n  }\r\n]"
								}
							]
						},
						{
							"name": "Canvas - Create a new sub-account",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account\": {\r\n\t\t\"name\": \"Sub sis_account_id\",\r\n\t\t\"sis_account_id\": \"123ccb\",\r\n\t\t\"default_storage_quota_mb\": \"20\",\r\n\t\t\"default_user_storage_quota_mb\": \"20\",\r\n\t\t\"default_group_storage_quota_mb\": \"20\"\r\n\t}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sub_accounts",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sub_accounts"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Add a new sub-account to a given account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"account\": {\r\n\t\t\"name\": \"Sub sis_account_id\",\r\n\t\t\"sis_account_id\": \"123ccb\",\r\n\t\t\"default_storage_quota_mb\": \"20\",\r\n\t\t\"default_user_storage_quota_mb\": \"20\",\r\n\t\t\"default_group_storage_quota_mb\": \"20\"\r\n\t}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sub_accounts",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sub_accounts"
											],
											"variable": [
												{
													"key": "account_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "{\r\n\t\"account\": {\r\n\t\t\"name\": \"Sub sis_account_id\",\r\n\t\t\"sis_account_id\": \"123ccb\",\r\n\t\t\"default_storage_quota_mb\": \"20\",\r\n\t\t\"default_user_storage_quota_mb\": \"20\",\r\n\t\t\"default_group_storage_quota_mb\": \"20\"\r\n\t}\r\n}"
								}
							]
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Canvas - Create a user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \t\"user\" : {\n\t\t\t\n\t\t\t\"name\" : \"John Doe\",\n\t\t\t\"short_name\" : \"John\",\n            \"sortable_name\": \"John, Doe\",\n            \"time_zone\": \"America/Denver\",\n            \"locale\": \"en-GB\",\n            \"terms_of_use\": true,\n            \"skip_registration\": false\n \t},\n \t\"pseudonym\" : {\n \t\t\"unique_id\": \"john.doe@example.com\",\n \t\t\"sis_user_id\" : \"012746\",\n \t\t\"integration_id\" : \"012746\",\n        \"password\": \"1234\",\n        \"send_confirmation\": true,\n        \"force_self_registration\": false,\n        \"authentication_provider_id\": \"SAML\"\n \t},\n    \"communication_channel\": {\n        \"type\": \"email\",\n        \"address\" : \"john.doe@example.com\",\n        \"confirmation_url\": false,\n        \"skip_confirmation\": false\n    },\n    \"force_validations\": false,\n    \"enable_sis_reactivation\": false,\n    \"destination\": \"http://www.example.com\",\n    \"initial_enrollment_type\": \"observer\",\n    \"pairing_code\": {\n        \"code\": \"12344\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/users",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"users"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Canvas account ID or SIS ID"
										}
									]
								},
								"description": "Create and return a new user and pseudonym for an account.\n\nDEPRECATED (for self-registration only)\nIf you don't have the “Modify\n\nlogin details for users“ permission, but self-registration is enabled on the account, you can still use this endpoint to register new users. Certain fields will be required, and others will be ignored (see below)."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \t\"user\" : {\n\t\t\t\n\t\t\t\"name\" : \"John Doe\",\n\t\t\t\"short_name\" : \"John\",\n            \"sortable_name\": \"John, Doe\",\n            \"time_zone\": \"America/Denver\",\n            \"locale\": \"en-GB\",\n            \"terms_of_use\": true,\n            \"skip_registration\": false\n \t},\n \t\"pseudonym\" : {\n \t\t\"unique_id\": \"john.doe@example.com\",\n \t\t\"sis_user_id\" : \"012746\",\n \t\t\"integration_id\" : \"012746\",\n        \"password\": \"1234\",\n        \"send_confirmation\": true,\n        \"force_self_registration\": false,\n        \"authentication_provider_id\": \"SAML\"\n \t},\n    \"communication_channel\": {\n        \"type\": \"email\",\n        \"address\" : \"john.doe@example.com\",\n        \"confirmation_url\": false,\n        \"skip_confirmation\": false\n    },\n    \"force_validations\": false,\n    \"enable_sis_reactivation\": false,\n    \"destination\": \"http://www.example.com\",\n    \"initial_enrollment_type\": \"observer\",\n    \"pairing_code\": {\n        \"code\": \"12344\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/users",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"users"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Canvas account ID or SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 2,\n    \"name\": \"Sheldon Cooper\",\n    \"sortable_name\": \"Cooper, Sheldon\",\n    \"short_name\": \"Shelly\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"sis_import_id\": 18,\n    \"integration_id\": \"ABC59802\",\n    \"login_id\": \"sheldon@caltech.example.com\",\n    \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n    \"enrollments\": null,\n    \"email\": \"sheldon@caltech.example.com\",\n    \"locale\": \"tlh\",\n    \"last_login\": \"2012-05-30T17:45:25Z\",\n    \"time_zone\": \"America/Denver\",\n    \"bio\": \"I like the Muppets.\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Update User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Modify an existing user. To modify a user's login, see the documentation for logins."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 2,\n    \"name\": \"Sheldon Cooper\",\n    \"sortable_name\": \"Cooper, Sheldon\",\n    \"short_name\": \"Shelly\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"sis_import_id\": 18,\n    \"integration_id\": \"ABC59802\",\n    \"login_id\": \"sheldon@caltech.example.com\",\n    \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n    \"enrollments\": null,\n    \"email\": \"sheldon@caltech.example.com\",\n    \"locale\": \"tlh\",\n    \"last_login\": \"2012-05-30T17:45:25Z\",\n    \"time_zone\": \"America/Denver\",\n    \"bio\": \"I like the Muppets.\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Merge user into another user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:id/merge_into/:destination_user_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id",
										"merge_into",
										":destination_user_id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string"
										},
										{
											"key": "destination_user_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Merge a user into another user. To merge users, the caller must have permissions to manage both users. This should be considered irreversible. This will delete the user and move all the data into the destination user.\n\nUser merge details and caveats: The from_user is the user that was deleted in the user_merge process. The destination_user is the user that remains, that is being split.\n\nAvatars: When both users have avatars, only the destination_users avatar will remain. When one user has an avatar, will it will end up on the destination_user.\n\nTerms of Use: If either user has accepted terms of use, it will be be left as accepted.\n\nCommunication Channels: All unique communication channels moved to the destination_user. All notification preferences are moved to the destination_user.\n\nEnrollments: All unique enrollments are moved to the destination_user. When there is an enrollment that would end up making it so that a user would be observing themselves, the enrollment is not moved over. Everything that is tied to the from_user at the course level relating to the enrollment is also moved to the destination_user.\n\nSubmissions: All submissions are moved to the destination_user. If there are enrollments for both users in the same course, we prefer submissions that have grades then submissions that have work in them, and if there are no grades or no work, they are not moved.\n\nOther notes: Access Tokens are moved on merge. Conversations are moved on merge. Favorites are moved on merge. Courses will commonly use LTI tools. LTI tools reference the user with IDs that are stored on a user object. Merging users deletes one user and moves all records from the deleted user to the destination_user. These IDs are kept for all enrollments, group_membership, and account_users for the from_user at the time of the merge. When the destination_user launches an LTI tool from a course that used to be the from_user's, it doesn't appear as a new user to the tool provider. Instead it will send the stored ids. The destination_user's LTI IDs remain as they were for the courses that they originally had. Future enrollments for the destination_user will use the IDs that are on the destination_user object. LTI IDs that are kept and tracked per context include lti_context_id, lti_id and uuid. APIs that return the LTI ids will return the one for the context that it is called for, except for the user uuid. The user UUID will display the destination_users uuid, and when getting the uuid from an api that is in a context that was recorded from a merge event, an additional attribute is added as past_uuid.\n\nWhen finding users by SIS ids in different accounts the destination_account_id is required.\n\nThe account can also be identified by passing the domain in destination_account_id."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:id/merge_into/:destination_user_id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"merge_into",
												":destination_user_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Canvas ID or SIS id"
												},
												{
													"key": "destination_user_id",
													"value": "",
													"description": "Canvas ID or SIS id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 2,\n    \"name\": \"Sheldon Cooper\",\n    \"sortable_name\": \"Cooper, Sheldon\",\n    \"short_name\": \"Shelly\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"sis_import_id\": 18,\n    \"integration_id\": \"ABC59802\",\n    \"login_id\": \"sheldon@caltech.example.com\",\n    \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n    \"enrollments\": null,\n    \"email\": \"sheldon@caltech.example.com\",\n    \"locale\": \"tlh\",\n    \"last_login\": \"2012-05-30T17:45:25Z\",\n    \"time_zone\": \"America/Denver\",\n    \"bio\": \"I like the Muppets.\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Split merged users into separate users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:id/split",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id",
										"split"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Merged users cannot be fully restored to their previous state, but this will attempt to split as much as possible to the previous state. To split a merged user, the caller must have permissions to manage all of the users logins. If there are multiple users that have been merged into one user it will split each merge into a separate user. A split can only happen within 180 days of a user merge. A user merge deletes the previous user and may be permanently deleted. In this scenario we create a new user object and proceed to move as much as possible to the new user. The user object will not have preserved the name or settings from the previous user. Some items may have been deleted during a user_merge that cannot be restored, and/or the data has become stale because of other changes to the objects since the time of the user_merge.\n\nSplit users details and caveats:\n\nThe from_user is the user that was deleted in the user_merge process. The destination_user is the user that remains, that is being split.\n\nAvatars: When both users had avatars, both will be remain. When from_user had an avatar and destination_user did not have an avatar, the destination_user's avatar will be deleted if it still matches what was there are the time of the merge. If the destination_user's avatar was changed at anytime after the merge, it will remain on the destination user. If the from_user had an avatar it will be there after split.\n\nTerms of Use: If from_user had not accepted terms of use, they will be prompted again to accept terms of use after the split. If the destination_user had not accepted terms of use, hey will be prompted again to accept terms of use after the split. If neither user had accepted the terms of use, but since the time of the merge had accepted, both will be prompted to accept terms of use. If both had accepted terms of use, this will remain.\n\nCommunication Channels: All communication channels are restored to what they were prior to the merge. If a communication channel was added after the merge, it will remain on the destination_user. Notification preferences remain with the communication channels.\n\nEnrollments: All enrollments from the time of the merge will be moved back to where they were. Enrollments created since the time of the merge that were created by sis_import will go to the user that owns that sis_id used for the import. Other new enrollments will remain on the destination_user. Everything that is tied to the destination_user at the course level relating to an enrollment is moved to the from_user. When both users are in the same course prior to merge this can cause some unexpected items to move.\n\nSubmissions: Unlike other items tied to a course, submissions are explicitly recorded to avoid problems with grades. All submissions were moved are restored to the spot prior to merge. All submission that were created in a course that was moved in enrollments are moved over to the from_user.\n\nOther notes: Access Tokens are moved back on split. Conversations are moved back on split. Favorites that existing at the time of merge are moved back on split. LTI ids are restored to how they were prior to merge.\n"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"user\": {\n        \"name\": \"John Doe\",\n        \"short_name\": \"John\",\n        \"sortable_name\": \"John, Doe\",\n        \"time_zone\": \"America/Denver\",\n        \"email\": \"john.doe@example.com\",\n        \"locale\": \"en-GB\",\n        \"avatar\": {\n            \"token\": \"1232nfiui3u\",\n            \"url\": \"https://instructure.com/avatars/john.doe\"\n        },\n        \"title\": \"System Analyst\",\n        \"bio\": \"Sample Bio\",\n        \"pronouns\": \"Test\"\n    }\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:id/merge_into/:destination_user_id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"merge_into",
												":destination_user_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Canvas ID or SIS id"
												},
												{
													"key": "destination_user_id",
													"value": "",
													"description": "Canvas ID or SIS id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Sheldon Cooper\",\n        \"sortable_name\": \"Cooper, Sheldon\",\n        \"short_name\": \"Shelly\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"sis_import_id\": 18,\n        \"integration_id\": \"ABC59802\",\n        \"login_id\": \"sheldon@caltech.example.com\",\n        \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n        \"enrollments\": null,\n        \"email\": \"sheldon@caltech.example.com\",\n        \"locale\": \"tlh\",\n        \"last_login\": \"2012-05-30T17:45:25Z\",\n        \"time_zone\": \"America/Denver\",\n        \"bio\": \"I like the Muppets.\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - List users in account",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/users?search_term&enrollment_type&sort&order",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"users"
									],
									"query": [
										{
											"key": "search_term",
											"value": null,
											"description": "The partial name or full ID of the users to match and return in the results list. Must be at least 3 characters.\n\nNote that the API will prefer matching on canonical user ID if the ID has a numeric form. It will only search against other fields if non-numeric in form, or if the numeric value doesn't yield any matches. Queries by administrative users will search on SIS ID, login ID, name, or email address"
										},
										{
											"key": "enrollment_type",
											"value": null,
											"description": "When set, only return users enrolled with the specified course-level base role. This can be a base role type of 'student', 'teacher', 'ta', 'observer', or 'designer'."
										},
										{
											"key": "sort",
											"value": null,
											"description": "The column to sort results by.\n\nAllowed values:\nusername, email, sis_id, last_login"
										},
										{
											"key": "order",
											"value": null,
											"description": "The order to sort the given column by.\n\nAllowed values:\nasc, desc"
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Canvas account ID or SIS ID"
										}
									]
								},
								"description": "A paginated list of of users associated with this account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/users?search_term=John&enrollment_type=student&sort=username&order=asc",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"users"
											],
											"query": [
												{
													"key": "search_term",
													"value": "John"
												},
												{
													"key": "enrollment_type",
													"value": "student"
												},
												{
													"key": "sort",
													"value": "username"
												},
												{
													"key": "order",
													"value": "asc"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "1",
													"description": "Canvas account ID or SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Sheldon Cooper\",\n        \"sortable_name\": \"Cooper, Sheldon\",\n        \"short_name\": \"Shelly\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"sis_import_id\": 18,\n        \"integration_id\": \"ABC59802\",\n        \"login_id\": \"sheldon@caltech.example.com\",\n        \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n        \"enrollments\": null,\n        \"email\": \"sheldon@caltech.example.com\",\n        \"locale\": \"tlh\",\n        \"last_login\": \"2012-05-30T17:45:25Z\",\n        \"time_zone\": \"America/Denver\",\n        \"bio\": \"I like the Muppets.\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Show user details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:id?include[]",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"query": [
										{
											"key": "include[]",
											"value": null,
											"description": "Array of additional information to include on the user record. “locale”, “avatar_url”, “permissions”, “email”, and “effective_locale” will always be returned\nAllowed values:\nuuid, last_login"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "2",
											"type": "string",
											"description": "Canvas ID of SIS ID"
										}
									]
								},
								"description": "Shows details for user."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Sheldon Cooper\",\n        \"sortable_name\": \"Cooper, Sheldon\",\n        \"short_name\": \"Shelly\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"sis_import_id\": 18,\n        \"integration_id\": \"ABC59802\",\n        \"login_id\": \"sheldon@caltech.example.com\",\n        \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n        \"enrollments\": null,\n        \"email\": \"sheldon@caltech.example.com\",\n        \"locale\": \"tlh\",\n        \"last_login\": \"2012-05-30T17:45:25Z\",\n        \"time_zone\": \"America/Denver\",\n        \"bio\": \"I like the Muppets.\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Update user settings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"name": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"manual_mark_as_read\": true,\r\n\t\"collapse_global_nav\": true,\r\n\t\"hide_dashcard_color_overlays\": true\r\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:id/settings",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id",
										"settings"
									],
									"variable": [
										{
											"key": "id",
											"value": "1",
											"type": "string",
											"description": "Canvas ID or SIS ID"
										}
									]
								},
								"description": "Shows details for user."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"manual_mark_as_read\": true,\r\n\t\"collapse_global_nav\": true,\r\n\t\"hide_dashcard_color_overlays\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:id/settings",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"settings"
											],
											"variable": [
												{
													"key": "id",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Canvas - Get user profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/profile",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"profile"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Returns user profile data, including user id, name, and profile pic.\n\nWhen requesting the profile for the user accessing the API, the user's calendar feed URL and LTI user id will be returned as well."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/profile",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"profile"
											],
											"variable": [
												{
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1234,\n    \"name\": \"Sample User\",\n    \"short_name\": \"Sample User\",\n    \"sortable_name\": \"user, sample\",\n    \"title\": null,\n    \"bio\": null,\n    \"primary_email\": \"sample_user@example.com\",\n    \"login_id\": \"sample_user@example.com\",\n    \"sis_user_id\": \"sis1\",\n    \"lti_user_id\": null,\n    \"avatar_url\": \"..url..\",\n    \"calendar\": null,\n    \"time_zone\": \"America/Denver\",\n    \"locale\": null\n}"
								}
							]
						},
						{
							"name": "Canvas - Get User (Self)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/self",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"self"
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/self",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"self"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 2,\n    \"name\": \"Sheldon Cooper\",\n    \"sortable_name\": \"Cooper, Sheldon\",\n    \"short_name\": \"Shelly\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"sis_import_id\": 18,\n    \"integration_id\": \"ABC59802\",\n    \"login_id\": \"sheldon@caltech.example.com\",\n    \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n    \"enrollments\": null,\n    \"email\": \"sheldon@caltech.example.com\",\n    \"locale\": \"tlh\",\n    \"last_login\": \"2012-05-30T17:45:25Z\",\n    \"time_zone\": \"America/Denver\",\n    \"bio\": \"I like the Muppets.\"\n}"
								}
							]
						},
						{
							"name": "Canvas - List user logins",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \t\"login\" :  {\n \t\t\"unique_id\": \"hannah.abd.updated@insead.edu\",\n \t\t\"sis_user_id\" : \"0965519\",\n \t\t\"integration_id\" : \"0965519\",\n \t\t\"skip_confirmation\" : true\n \t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"logins"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Canvas account ID or SIS ID "
										}
									]
								},
								"description": "Given a user ID, return a paginated list of that user's logins for the given account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"logins"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Canvas ID or SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\r\n  {\r\n    \"account_id\": 1,\r\n    \"id\" 2,\r\n    \"sis_user_id\": null,\r\n    \"unique_id\": \"belieber@example.com\",\r\n    \"user_id\": 2,\r\n    \"authentication_provider_id\": 1,\r\n    \"authentication_provider_type\": \"facebook\"\r\n  }\r\n]"
								},
								{
									"name": "200 (User Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/logins",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"logins"
											],
											"variable": [
												{
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": "[\r\n  {\r\n    \"account_id\": 1,\r\n    \"id\" 2,\r\n    \"sis_user_id\": null,\r\n    \"unique_id\": \"belieber@example.com\",\r\n    \"user_id\": 2,\r\n    \"authentication_provider_id\": 1,\r\n    \"authentication_provider_type\": \"facebook\"\r\n  }\r\n]"
								}
							]
						},
						{
							"name": "Canvas - Create a user login",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \t\"login\" :  {\n \t\t\"unique_id\": \"hannah.abd.updated@insead.edu\",\n \t\t\"sis_user_id\" : \"0965519\",\n \t\t\"integration_id\" : \"0965519\",\n \t\t\"skip_confirmation\" : true,\n\t\t\"password\": \"2344\",\n\t\t\"authentication_provider_id\": \"saml\"\n \t},\n\t\"user\": {\n\t\t\"id\" :\"12\"\n\t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"logins"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Canvas Account ID or SIS ID"
										}
									]
								},
								"description": "Create a new login for an existing user in the given account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \t\"login\" :  {\n \t\t\"unique_id\": \"bieber@example.co\",\n \t\t\"sis_user_id\" : \"0965519\",\n \t\t\"integration_id\" : \"0965519\",\n \t\t\"skip_confirmation\" : true,\n\t\t\"password\": \"2344\",\n\t\t\"authentication_provider_id\": \"saml\"\n \t},\n\t\"user\": {\n\t\t\"id\" :\"12\"\n\t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"logins"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "3",
													"description": "Canvas Account ID or SIS ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"user_id\": 12,\n    \"account_id\": 3,\n    \"unique_id\": \"bieber@example.com\",\n    \"created_at\": \"2020-01-29T19:33:35Z\",\n    \"sis_user_id\": \"0965519\",\n    \"integration_id\": \"0965519\",\n    \"authentication_provider_id\": \"saml\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Update user login",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \t\"login\" :  {\n \t\t\"unique_id\": \"hannah.abd.updated@insead.edu\",\n \t\t\"sis_user_id\" : \"0965519\",\n \t\t\"integration_id\" : \"0965519\",\n\t\t \"password\": \"password\",\n \t\t\"skip_confirmation\" : true\n \t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"logins",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Canvas account ID or SIS account ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Canvas user ID or SIS User ID"
										}
									]
								},
								"description": "Update an existing login for a user in the given account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \t\"login\" :  {\n \t\t\"unique_id\": \"bieber@example.com\",\n \t\t\"sis_user_id\" : \"0965519\",\n \t\t\"integration_id\" : \"0965519\",\n\t\t\"password\": \"password\",\n \t\t\"skip_confirmation\" : true\n \t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/logins/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"logins",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Canvas account ID or SIS account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Canvas user ID or SIS User ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"user_id\": 2,\n    \"account_id\": 3,\n    \"unique_id\": \"bieber@example.com\",\n    \"created_at\": \"2020-01-29T19:33:35Z\",\n    \"sis_user_id\": \"0965519\",\n    \"integration_id\": \"0965519\",\n    \"authentication_provider_id\": null\n}"
								}
							]
						},
						{
							"name": "Canvas - Delete User login",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/logins/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"logins",
										":id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "",
											"type": "string",
											"description": "Canvas AP"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Canvas login ID(You have to query logins API to get this ID)"
										}
									]
								},
								"description": "Delete an existing login."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/logins/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"logins",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "2"
												},
												{
													"key": "id",
													"value": "12345"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"unique_id\": \"bieber@example.com\",\n    \"sis_user_id\": null,\n    \"account_id\": 1,\n    \"id\": 12345,\n    \"user_id\": 2\n}"
								}
							]
						},
						{
							"name": "Canvas - List user page views",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/page_views?start_time=2020-01-01T00:00:00.000Z&end_time=2020-01-21T00:00:00.000Z",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"page_views"
									],
									"query": [
										{
											"key": "start_time",
											"value": "2020-01-01T00:00:00.000Z",
											"description": "The beginning of the time range from which you want page views."
										},
										{
											"key": "end_time",
											"value": "2020-01-21T00:00:00.000Z",
											"description": "The end of the time range from which you want page views."
										}
									],
									"variable": [
										{
											"key": "user_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Return a paginated list of the user's page view history in json format, similar to the available CSV download. Page views are returned in descending order, newest to oldest."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/page_views?start_time=2020-01-01T00:00:00.000Z&end_time=2020-01-21T00:00:00.000Z",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"page_views"
											],
											"query": [
												{
													"key": "start_time",
													"value": "2020-01-01T00:00:00.000Z"
												},
												{
													"key": "end_time",
													"value": "2020-01-21T00:00:00.000Z"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": \"3e246700-e305-0130-51de-02e33aa501ef\",\n        \"app_name\": \"Canvas for iOS\",\n        \"url\": \"https://canvas.instructure.com/conversations\",\n        \"context_type\": \"Course\",\n        \"asset_type\": \"Discussion\",\n        \"controller\": \"discussions\",\n        \"action\": \"index\",\n        \"contributed\": false,\n        \"interaction_seconds\": 7.21,\n        \"created_at\": \"2013-10-01T19:49:47Z\",\n        \"user_request\": true,\n        \"render_time\": 0.369,\n        \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/536.30.1 (KHTML, like Gecko) Version/6.0.5 Safari/536.30.1\",\n        \"participated\": false,\n        \"http_method\": \"GET\",\n        \"remote_ip\": \"173.194.46.71\",\n        \"links\": {\n            \"user\": 1234,\n            \"account\": 1234\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - List user communication channels",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"communication_channels"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "1",
											"type": "string",
											"description": "Canvas user ID or SIS user ID"
										}
									]
								},
								"description": "Returns a paginated list of communication channels for the specified user, sorted by position."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"communication_channels"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1",
													"description": "Canvas user ID or SIS user ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 16,\n        \"address\": \"sheldon@caltech.example.com\",\n        \"type\": \"email\",\n        \"position\": 1,\n        \"user_id\": 1,\n        \"workflow_state\": \"active\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Delete a communication channel",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"communication_channels",
										":id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "",
											"type": "string",
											"description": "Canvas user ID or SIS User ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "ID of the communication channel. You need to call get all communications API get this ID"
										}
									]
								},
								"description": "Delete an existing communication channel."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"communication_channels",
												":id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1",
													"description": "Canvas user ID or SIS User ID"
												},
												{
													"key": "id",
													"value": "209",
													"description": "ID of the communication channel. You need to call get all communications API get this ID"
												}
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Canvas - Create a communication channel",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"communication_channel\": {\n    \"address\": \"abhijith.satyaprasad@insead.edu\",\n    \"type\": \"email\",\n\t\"token\": \"\"\n  },\n  \"skip_confirmation\": true\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"communication_channels"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "1",
											"type": "string",
											"description": "Canvas User ID or SIS User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"communication_channel\": {\n    \"address\": \"sheldon@caltech.example.com\",\n    \"type\": \"email\",\n\t\"token\": \"\"\n  },\n  \"skip_confirmation\": true\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/communication_channels",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"communication_channels"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1",
													"description": "Canvas User ID or SIS User ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 16,\n    \"address\": \"sheldon@caltech.example.com\",\n    \"type\": \"email\",\n    \"position\": 1,\n    \"user_id\": 1,\n    \"workflow_state\": \"active\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Enrollment Terms",
					"item": [
						{
							"name": "Canvas - List enrollment terms",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms?workflow_state[]=deleted&include[]=overrides",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms"
									],
									"query": [
										{
											"key": "workflow_state[]",
											"value": "deleted",
											"description": "If set, only returns terms that are in the given state. Defaults to 'active'.\n\nAllowed values:\nactive, deleted, all"
										},
										{
											"key": "include[]",
											"value": "overrides",
											"description": "Array of additional information to include.\n“overrides”\nterm start/end dates overridden for different enrollment types\nAllowed values:\noverrides"
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "An object with a paginated list of all of the terms in the account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms?workflow_state[]=deleted&include[]=overrides",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms"
											],
											"query": [
												{
													"key": "workflow_state[]",
													"value": "deleted",
													"description": "If set, only returns terms that are in the given state. Defaults to 'active'.\n\nAllowed values:\nactive, deleted, all"
												},
												{
													"key": "include[]",
													"value": "overrides",
													"description": "Array of additional information to include.\n“overrides”\nterm start/end dates overridden for different enrollment types\nAllowed values:\noverrides"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"sis_term_id\": \"Sp2014\",\n        \"sis_import_id\": 34,\n        \"name\": \"Spring 2014\",\n        \"start_at\": \"2014-01-06T08:00:00-05:00\",\n        \"end_at\": \"2014-05-16T05:00:00-04:00\",\n        \"workflow_state\": \"active\",\n        \"overrides\": {\n            \"StudentEnrollment\": {\n                \"start_at\": \"2014-01-07T08:00:00-05:00\",\n                \"end_at\": \"2014-05-14T05:00:00-04:0\"\n            }\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Retrieve enrollment term",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "224",
											"type": "string",
											"description": "Term ID or Term SIS ID"
										}
									]
								},
								"description": "An object with a paginated list of all of the terms in the account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms?workflow_state[]=deleted&include[]=overrides",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms"
											],
											"query": [
												{
													"key": "workflow_state[]",
													"value": "deleted",
													"description": "If set, only returns terms that are in the given state. Defaults to 'active'.\n\nAllowed values:\nactive, deleted, all"
												},
												{
													"key": "include[]",
													"value": "overrides",
													"description": "Array of additional information to include.\n“overrides”\nterm start/end dates overridden for different enrollment types\nAllowed values:\noverrides"
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"sis_term_id\": \"Sp2014\",\n        \"sis_import_id\": 34,\n        \"name\": \"Spring 2014\",\n        \"start_at\": \"2014-01-06T08:00:00-05:00\",\n        \"end_at\": \"2014-05-16T05:00:00-04:00\",\n        \"workflow_state\": \"active\",\n        \"overrides\": {\n            \"StudentEnrollment\": {\n                \"start_at\": \"2014-01-07T08:00:00-05:00\",\n                \"end_at\": \"2014-05-14T05:00:00-04:0\"\n            }\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Create enrollment term",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enrollment_term\" : {\n\t\t\"name\" : \"MBA-1930-ACC\",\n\t\t\"sis_term_id\" : \"MBA-1930-ACC\",\n\t\t\"start_at\":\"2019-01-01\",\n\t\t\"end_at\" : \"2019-02-28\",\n\t\t\"overrides\" : {\n\t\t\t\"enrollment_type\": {\n\t\t\t\t\"start_at\": \"2019-01-01T00:00:00.000Z\",\n\t\t\t\t\"end_at\": \"2019-12-31T00:00:00.000Z\"\n\t\t\t}\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Canvas id or SIS Account ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enrollment_term\" : {\n\t\t\"name\" : \"Spring 2014\",\n\t\t\"sis_term_id\" : \"Sp2014\",\n\t\t\"start_at\":\"2019-01-01\",\n\t\t\"end_at\" : \"2019-12-31\",\n\t\t\"overrides\" : {\n\t\t\t\"enrollment_type\": {\n\t\t\t\t\"start_at\": \"2019-01-01T00:00:00.000Z\",\n\t\t\t\t\"end_at\": \"2019-12-31T00:00:00.000Z\"\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "1",
													"description": "Canvas id or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"sis_term_id\": \"Sp2014\",\n    \"sis_import_id\": 34,\n    \"name\": \"Spring 2014\",\n    \"start_at\": \"2019-01-01\",\n    \"end_at\": \"2019-12-31\",\n    \"workflow_state\": \"active\",\n    \"overrides\": {\n        \"StudentEnrollment\": {\n            \"start_at\": \"2019-01-01T00:00:00.000Z\",\n            \"end_at\": \"2019-12-31T00:00:00.000Z\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Update enrollment term",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"enrollment_term\" : {\n\t\t\"name\" : \"Spring 2014\",\n\t\t\"sis_term_id\" : \"Sp2014\",\n\t\t\"start_at\":\"2019-01-01\",\n\t\t\"end_at\" : \"2019-12-31\",\n\t\t\"overrides\" : {\n\t\t\t\"enrollment_type\": {\n\t\t\t\t\"start_at\": \"2019-01-01T00:00:00.000Z\",\n\t\t\t\t\"end_at\": \"2019-12-31T00:00:00.000Z\"\n\t\t\t}\n\t\t}\n\t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Term ID or SIS Term ID\n"
										}
									]
								},
								"description": "Update an existing enrollment term for the specified account."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"enrollment_term\" : {\n\t\t\"name\" : \"Spring 2014\",\n\t\t\"sis_term_id\" : \"Sp2014\",\n\t\t\"start_at\":\"2019-01-01\",\n\t\t\"end_at\" : \"2019-12-31\",\n\t\t\"overrides\" : {\n\t\t\t\"enrollment_type\": {\n\t\t\t\t\"start_at\": \"2019-01-01T00:00:00.000Z\",\n\t\t\t\t\"end_at\": \"2019-12-31T00:00:00.000Z\"\n\t\t\t}\n\t\t}\n\t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Term ID or SIS Term ID\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"sis_term_id\": \"Sp2014\",\n    \"sis_import_id\": 34,\n    \"name\": \"Spring 2014\",\n    \"start_at\": \"2019-01-01\",\n    \"end_at\": \"2019-12-31\",\n    \"workflow_state\": \"active\",\n    \"overrides\": {\n        \"StudentEnrollment\": {\n            \"start_at\": \"2019-01-01T00:00:00.000Z\",\n            \"end_at\": \"2019-12-31T00:00:00.000Z\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Delete Term",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"terms",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Term ID or SIS Term ID"
										}
									]
								},
								"description": "Delete the specified enrollment term."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/terms/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"terms",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "1",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "1",
													"description": "Term ID or SIS Term ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"sis_term_id\": \"Sp2014\",\n    \"sis_import_id\": 34,\n    \"name\": \"Spring 2014\",\n    \"start_at\": \"2014-01-06T08:00:00-05:00\",\n    \"end_at\": \"2014-05-16T05:00:00-04:00\",\n    \"workflow_state\": \"active\",\n    \"overrides\": {\n        \"StudentEnrollment\": {\n            \"start_at\": \"2014-01-07T08:00:00-05:00\",\n            \"end_at\": \"2014-05-14T05:00:00-04:0\"\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Enrollments",
					"item": [
						{
							"name": "Canvas - List enrollments",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{domain}}/api/v1/courses/:course_id/enrollments",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"enrollments"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID\n"
										}
									]
								},
								"description": "Depending on the URL given, return a paginated list of either (1) all of the enrollments in a course, (2) all of the enrollments in a section or (3) all of a user's enrollments. This includes student, teacher, TA, and observer enrollments.\n\nIf a user has multiple enrollments in a context (e.g. as a teacher and a student or in multiple course sections), each enrollment will be listed separately.\n\nnote: Currently, only a root level admin user can return other users' enrollments. A user can, however, return his/her own enrollments."
							},
							"response": [
								{
									"name": "200 (Section Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvs_domain}}/api/v1/sections/:section_id/enrollments",
											"host": [
												"{{canvs_domain}}"
											],
											"path": [
												"api",
												"v1",
												"sections",
												":section_id",
												"enrollments"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "12",
													"description": "Section ID or SIS Section ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"course_id\": 1,\n        \"sis_course_id\": \"SHEL93921\",\n        \"course_integration_id\": \"SHEL93921\",\n        \"course_section_id\": 1,\n        \"section_integration_id\": \"SHEL93921\",\n        \"sis_account_id\": \"SHEL93921\",\n        \"sis_section_id\": \"SHEL93921\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"enrollment_state\": \"active\",\n        \"limit_privileges_to_course_section\": true,\n        \"sis_import_id\": 83,\n        \"root_account_id\": 1,\n        \"type\": \"StudentEnrollment\",\n        \"user_id\": 1,\n        \"associated_user_id\": null,\n        \"role\": \"StudentEnrollment\",\n        \"role_id\": 1,\n        \"created_at\": \"2012-04-18T23:08:51Z\",\n        \"updated_at\": \"2012-04-18T23:08:51Z\",\n        \"start_at\": \"2012-04-18T23:08:51Z\",\n        \"end_at\": \"2012-04-18T23:08:51Z\",\n        \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n        \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n        \"total_activity_time\": 260,\n        \"html_url\": \"https://...\",\n        \"grades\": {\n            \"html_url\": \"https://...\",\n            \"current_score\": 35,\n            \"current_grade\": null,\n            \"final_score\": 6.67,\n            \"final_grade\": null\n        },\n        \"user\": {\n            \"id\": 3,\n            \"name\": \"Student 1\",\n            \"sortable_name\": \"1, Student\",\n            \"short_name\": \"Stud 1\"\n        },\n        \"override_grade\": \"A\",\n        \"override_score\": 99.99,\n        \"unposted_current_grade\": \"\",\n        \"unposted_final_grade\": \"\",\n        \"unposted_current_score\": \"\",\n        \"unposted_final_score\": \"\",\n        \"has_grading_periods\": true,\n        \"totals_for_all_grading_periods_option\": true,\n        \"current_grading_period_title\": \"Fall Grading Period\",\n        \"current_grading_period_id\": 5,\n        \"current_period_override_grade\": \"A\",\n        \"current_period_override_score\": 99.99,\n        \"current_period_unposted_current_score\": 95.8,\n        \"current_period_unposted_final_score\": 85.25,\n        \"current_period_unposted_current_grade\": \"A\",\n        \"current_period_unposted_final_grade\": \"B\"\n    }\n]"
								},
								{
									"name": "200 (User Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvs_domain}}/api/v1/users/:user_id/enrollments",
											"host": [
												"{{canvs_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"enrollments"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "2",
													"description": "User ID or SIS user ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"course_id\": 1,\n        \"sis_course_id\": \"SHEL93921\",\n        \"course_integration_id\": \"SHEL93921\",\n        \"course_section_id\": 1,\n        \"section_integration_id\": \"SHEL93921\",\n        \"sis_account_id\": \"SHEL93921\",\n        \"sis_section_id\": \"SHEL93921\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"enrollment_state\": \"active\",\n        \"limit_privileges_to_course_section\": true,\n        \"sis_import_id\": 83,\n        \"root_account_id\": 1,\n        \"type\": \"StudentEnrollment\",\n        \"user_id\": 1,\n        \"associated_user_id\": null,\n        \"role\": \"StudentEnrollment\",\n        \"role_id\": 1,\n        \"created_at\": \"2012-04-18T23:08:51Z\",\n        \"updated_at\": \"2012-04-18T23:08:51Z\",\n        \"start_at\": \"2012-04-18T23:08:51Z\",\n        \"end_at\": \"2012-04-18T23:08:51Z\",\n        \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n        \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n        \"total_activity_time\": 260,\n        \"html_url\": \"https://...\",\n        \"grades\": {\n            \"html_url\": \"https://...\",\n            \"current_score\": 35,\n            \"current_grade\": null,\n            \"final_score\": 6.67,\n            \"final_grade\": null\n        },\n        \"user\": {\n            \"id\": 3,\n            \"name\": \"Student 1\",\n            \"sortable_name\": \"1, Student\",\n            \"short_name\": \"Stud 1\"\n        },\n        \"override_grade\": \"A\",\n        \"override_score\": 99.99,\n        \"unposted_current_grade\": \"\",\n        \"unposted_final_grade\": \"\",\n        \"unposted_current_score\": \"\",\n        \"unposted_final_score\": \"\",\n        \"has_grading_periods\": true,\n        \"totals_for_all_grading_periods_option\": true,\n        \"current_grading_period_title\": \"Fall Grading Period\",\n        \"current_grading_period_id\": 5,\n        \"current_period_override_grade\": \"A\",\n        \"current_period_override_score\": 99.99,\n        \"current_period_unposted_current_score\": 95.8,\n        \"current_period_unposted_final_score\": 85.25,\n        \"current_period_unposted_current_grade\": \"A\",\n        \"current_period_unposted_final_grade\": \"B\"\n    }\n]"
								},
								{
									"name": "200 (Course Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvs_domain}}/api/v1/courses/:course_id/enrollments",
											"host": [
												"{{canvs_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"enrollments"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "2",
													"description": "Course ID or SIS Course ID\n"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"course_id\": 1,\n        \"sis_course_id\": \"SHEL93921\",\n        \"course_integration_id\": \"SHEL93921\",\n        \"course_section_id\": 1,\n        \"section_integration_id\": \"SHEL93921\",\n        \"sis_account_id\": \"SHEL93921\",\n        \"sis_section_id\": \"SHEL93921\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"enrollment_state\": \"active\",\n        \"limit_privileges_to_course_section\": true,\n        \"sis_import_id\": 83,\n        \"root_account_id\": 1,\n        \"type\": \"StudentEnrollment\",\n        \"user_id\": 1,\n        \"associated_user_id\": null,\n        \"role\": \"StudentEnrollment\",\n        \"role_id\": 1,\n        \"created_at\": \"2012-04-18T23:08:51Z\",\n        \"updated_at\": \"2012-04-18T23:08:51Z\",\n        \"start_at\": \"2012-04-18T23:08:51Z\",\n        \"end_at\": \"2012-04-18T23:08:51Z\",\n        \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n        \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n        \"total_activity_time\": 260,\n        \"html_url\": \"https://...\",\n        \"grades\": {\n            \"html_url\": \"https://...\",\n            \"current_score\": 35,\n            \"current_grade\": null,\n            \"final_score\": 6.67,\n            \"final_grade\": null\n        },\n        \"user\": {\n            \"id\": 3,\n            \"name\": \"Student 1\",\n            \"sortable_name\": \"1, Student\",\n            \"short_name\": \"Stud 1\"\n        },\n        \"override_grade\": \"A\",\n        \"override_score\": 99.99,\n        \"unposted_current_grade\": \"\",\n        \"unposted_final_grade\": \"\",\n        \"unposted_current_score\": \"\",\n        \"unposted_final_score\": \"\",\n        \"has_grading_periods\": true,\n        \"totals_for_all_grading_periods_option\": true,\n        \"current_grading_period_title\": \"Fall Grading Period\",\n        \"current_grading_period_id\": 5,\n        \"current_period_override_grade\": \"A\",\n        \"current_period_override_score\": 99.99,\n        \"current_period_unposted_current_score\": 95.8,\n        \"current_period_unposted_final_score\": 85.25,\n        \"current_period_unposted_current_grade\": \"A\",\n        \"current_period_unposted_final_grade\": \"B\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Get User Enrollments By ID",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"enrollment\": {\r\n    \"user_id\": \"sis_user_id:0978242\",\r\n    \"type\": \"StudentEnrollment\",\r\n    \"course_section_id\": \"sis_section_id:007155-1-1930-P1-3202-AA\",\r\n    \"enrollment_state\": \"active\",\r\n    \"limit_privileges_to_course_section\": false,\r\n    \"notify\": false\r\n  }\r\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/enrollments/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Enrollment ID or SIS Enrollment ID"
										}
									]
								},
								"description": "Get an Enrollment object by Enrollment ID"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/enrollments/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"enrollments",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Enrollment ID or SIS Enrollment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"course_id\": 1,\n    \"sis_course_id\": \"SHEL93921\",\n    \"course_integration_id\": \"SHEL93921\",\n    \"course_section_id\": 1,\n    \"section_integration_id\": \"SHEL93921\",\n    \"sis_account_id\": \"SHEL93921\",\n    \"sis_section_id\": \"SHEL93921\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"enrollment_state\": \"active\",\n    \"limit_privileges_to_course_section\": true,\n    \"sis_import_id\": 83,\n    \"root_account_id\": 1,\n    \"type\": \"StudentEnrollment\",\n    \"user_id\": 1,\n    \"associated_user_id\": null,\n    \"role\": \"StudentEnrollment\",\n    \"role_id\": 1,\n    \"created_at\": \"2012-04-18T23:08:51Z\",\n    \"updated_at\": \"2012-04-18T23:08:51Z\",\n    \"start_at\": \"2012-04-18T23:08:51Z\",\n    \"end_at\": \"2012-04-18T23:08:51Z\",\n    \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n    \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n    \"total_activity_time\": 260,\n    \"html_url\": \"https://...\",\n    \"grades\": {\n        \"html_url\": \"https://...\",\n        \"current_score\": 35,\n        \"current_grade\": null,\n        \"final_score\": 6.67,\n        \"final_grade\": null\n    },\n    \"user\": {\n        \"id\": 3,\n        \"name\": \"Student 1\",\n        \"sortable_name\": \"1, Student\",\n        \"short_name\": \"Stud 1\"\n    },\n    \"override_grade\": \"A\",\n    \"override_score\": 99.99,\n    \"unposted_current_grade\": \"\",\n    \"unposted_final_grade\": \"\",\n    \"unposted_current_score\": \"\",\n    \"unposted_final_score\": \"\",\n    \"has_grading_periods\": true,\n    \"totals_for_all_grading_periods_option\": true,\n    \"current_grading_period_title\": \"Fall Grading Period\",\n    \"current_grading_period_id\": 5,\n    \"current_period_override_grade\": \"A\",\n    \"current_period_override_score\": 99.99,\n    \"current_period_unposted_current_score\": 95.8,\n    \"current_period_unposted_final_score\": 85.25,\n    \"current_period_unposted_current_grade\": \"A\",\n    \"current_period_unposted_final_grade\": \"B\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Create User Enrollment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \t\"enrollment\" : {\n\t\t\"user_id\" : 12,\n\t\t\"type\": \"StudentEnrollment\",\n\t\t\"sis_course_id\" : \"course-211\",\n\t\t\"enrollment_state\" : \"active\",\n\t\t\"role_id\": \"\",\n\t\t\"start_at\": \"2020-02-01T00:00:00.000Z\",\n\t\t\"end_at\":  \"2021-02-01T00:00:00.000Z\"\n \t}\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"enrollments"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "200 (Section Scope)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \t\"enrollment\" : {\n\t\t\"user_id\" : 12,\n\t\t\"type\": \"StudentEnrollment\",\n\t\t\"sis_course_id\" : \"course-211\",\n\t\t\"enrollment_state\" : \"active\",\n\t\t\"role_id\": \"\",\n\t\t\"start_at\": \"2020-02-01T00:00:00.000Z\",\n\t\t\"end_at\":  \"2021-02-01T00:00:00.000Z\"\n \t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/sections/:section_id/enrollments",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"sections",
												":section_id",
												"enrollments"
											],
											"variable": [
												{
													"key": "section_id",
													"value": "234",
													"description": "Section ID or SIS Section ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"course_id\": 1,\n    \"sis_course_id\": \"SHEL93921\",\n    \"course_integration_id\": \"SHEL93921\",\n    \"course_section_id\": 1,\n    \"section_integration_id\": \"SHEL93921\",\n    \"sis_account_id\": \"SHEL93921\",\n    \"sis_section_id\": \"SHEL93921\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"enrollment_state\": \"active\",\n    \"limit_privileges_to_course_section\": true,\n    \"sis_import_id\": 83,\n    \"root_account_id\": 1,\n    \"type\": \"StudentEnrollment\",\n    \"user_id\": 1,\n    \"associated_user_id\": null,\n    \"role\": \"StudentEnrollment\",\n    \"role_id\": 1,\n    \"created_at\": \"2012-04-18T23:08:51Z\",\n    \"updated_at\": \"2012-04-18T23:08:51Z\",\n    \"start_at\": \"2012-04-18T23:08:51Z\",\n    \"end_at\": \"2012-04-18T23:08:51Z\",\n    \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n    \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n    \"total_activity_time\": 260,\n    \"html_url\": \"https://...\",\n    \"grades\": {\n        \"html_url\": \"https://...\",\n        \"current_score\": 35,\n        \"current_grade\": null,\n        \"final_score\": 6.67,\n        \"final_grade\": null\n    },\n    \"user\": {\n        \"id\": 3,\n        \"name\": \"Student 1\",\n        \"sortable_name\": \"1, Student\",\n        \"short_name\": \"Stud 1\"\n    },\n    \"override_grade\": \"A\",\n    \"override_score\": 99.99,\n    \"unposted_current_grade\": \"\",\n    \"unposted_final_grade\": \"\",\n    \"unposted_current_score\": \"\",\n    \"unposted_final_score\": \"\",\n    \"has_grading_periods\": true,\n    \"totals_for_all_grading_periods_option\": true,\n    \"current_grading_period_title\": \"Fall Grading Period\",\n    \"current_grading_period_id\": 5,\n    \"current_period_override_grade\": \"A\",\n    \"current_period_override_score\": 99.99,\n    \"current_period_unposted_current_score\": 95.8,\n    \"current_period_unposted_final_score\": 85.25,\n    \"current_period_unposted_current_grade\": \"A\",\n    \"current_period_unposted_final_grade\": \"B\"\n}"
								},
								{
									"name": "200 (Course Scope)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \t\"enrollment\" : {\n\t\t\"user_id\" : 12,\n\t\t\"type\": \"StudentEnrollment\",\n\t\t\"sis_course_id\" : \"course-211\",\n\t\t\"enrollment_state\" : \"active\",\n\t\t\"role_id\": \"\",\n\t\t\"start_at\": \"2020-02-01T00:00:00.000Z\",\n\t\t\"end_at\":  \"2021-02-01T00:00:00.000Z\"\n \t}\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"enrollments"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "12",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"course_id\": 1,\n    \"sis_course_id\": \"SHEL93921\",\n    \"course_integration_id\": \"SHEL93921\",\n    \"course_section_id\": 1,\n    \"section_integration_id\": \"SHEL93921\",\n    \"sis_account_id\": \"SHEL93921\",\n    \"sis_section_id\": \"SHEL93921\",\n    \"sis_user_id\": \"SHEL93921\",\n    \"enrollment_state\": \"active\",\n    \"limit_privileges_to_course_section\": true,\n    \"sis_import_id\": 83,\n    \"root_account_id\": 1,\n    \"type\": \"StudentEnrollment\",\n    \"user_id\": 1,\n    \"associated_user_id\": null,\n    \"role\": \"StudentEnrollment\",\n    \"role_id\": 1,\n    \"created_at\": \"2012-04-18T23:08:51Z\",\n    \"updated_at\": \"2012-04-18T23:08:51Z\",\n    \"start_at\": \"2012-04-18T23:08:51Z\",\n    \"end_at\": \"2012-04-18T23:08:51Z\",\n    \"last_activity_at\": \"2012-04-18T23:08:51Z\",\n    \"last_attended_at\": \"2012-04-18T23:08:51Z\",\n    \"total_activity_time\": 260,\n    \"html_url\": \"https://...\",\n    \"grades\": {\n        \"html_url\": \"https://...\",\n        \"current_score\": 35,\n        \"current_grade\": null,\n        \"final_score\": 6.67,\n        \"final_grade\": null\n    },\n    \"user\": {\n        \"id\": 3,\n        \"name\": \"Student 1\",\n        \"sortable_name\": \"1, Student\",\n        \"short_name\": \"Stud 1\"\n    },\n    \"override_grade\": \"A\",\n    \"override_score\": 99.99,\n    \"unposted_current_grade\": \"\",\n    \"unposted_final_grade\": \"\",\n    \"unposted_current_score\": \"\",\n    \"unposted_final_score\": \"\",\n    \"has_grading_periods\": true,\n    \"totals_for_all_grading_periods_option\": true,\n    \"current_grading_period_title\": \"Fall Grading Period\",\n    \"current_grading_period_id\": 5,\n    \"current_period_override_grade\": \"A\",\n    \"current_period_override_score\": 99.99,\n    \"current_period_unposted_current_score\": 95.8,\n    \"current_period_unposted_final_score\": 85.25,\n    \"current_period_unposted_current_grade\": \"A\",\n    \"current_period_unposted_final_grade\": \"B\"\n}"
								}
							]
						},
						{
							"name": "Canvas - End Enrollment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"task\": \"delete\"\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"enrollments",
										":id"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Enrollment ID or SIS Enrollment ID"
										}
									]
								},
								"description": "Conclude, deactivate, or delete an enrollment. If the task argument isn't given, the enrollment will be concluded."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"task\": \"delete\"\n}"
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"enrollments",
												":id"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Enrollment ID or SIS Enrollment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Canvas - Accept Course Invitation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id/accept",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"enrollments",
										":id",
										"accept"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string"
										},
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Conclude, deactivate, or delete an enrollment. If the task argument isn't given, the enrollment will be concluded."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id/accept",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"enrollments",
												":id",
												"accept"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Enrollment ID or SIS Enrollment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true\n}"
								}
							]
						},
						{
							"name": "Canvas - Reject Course Invitation",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"task\": \"delete\"\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id/reject",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"enrollments",
										":id",
										"reject"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string"
										},
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Conclude, deactivate, or delete an enrollment. If the task argument isn't given, the enrollment will be concluded."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/enrollments/:id/reject",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"enrollments",
												":id",
												"reject"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Enrollment ID or SIS Enrollment ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"success\": true\n}"
								}
							]
						}
					]
				},
				{
					"name": "Courses",
					"item": [
						{
							"name": "Canvas - List your courses",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses?enrollment_type&enrollment_role&enrollment_role_id&enrollment_state&exclude_blueprint_courses&include[]&state[]",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses"
									],
									"query": [
										{
											"key": "enrollment_type",
											"value": null,
											"description": "When set, only return courses where the user is enrolled as this type. For example, set to “teacher” to return only courses where the user is enrolled as a Teacher. This argument is ignored if enrollment_role is given.\n\nAllowed values:\nteacher, student, ta, observer, designer"
										},
										{
											"key": "enrollment_role",
											"value": null,
											"description": "Deprecated When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
										},
										{
											"key": "enrollment_role_id",
											"value": null,
											"description": "When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a built_in role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
										},
										{
											"key": "enrollment_state",
											"value": null,
											"description": "When set, only return courses where the user has an enrollment with the given state. This will respect section/course/term date overrides.\n\nAllowed values:\nactive, invited_or_pending, completed"
										},
										{
											"key": "exclude_blueprint_courses",
											"value": null,
											"description": "When set, only return courses that are not configured as blueprint courses."
										},
										{
											"key": "include[]",
											"value": null,
											"description": "needs_grading_count”: Optional information to include with each Course. When needs_grading_count is given, and the current user has grading rights, the total number of submissions needing grading for all assignments is returned.\n\n“syllabus_body”: Optional information to include with each Course. When syllabus_body is given the user-generated html for the course syllabus is returned.\n\n“public_description”: Optional information to include with each Course. When public_description is given the user-generated text for the course public description is returned.\n\n“total_scores”: Optional information to include with each Course. When total_scores is given, any student enrollments will also include the fields 'computed_current_score', 'computed_final_score', 'computed_current_grade', and 'computed_final_grade', as well as (if the user has permission) 'unposted_current_score', 'unposted_final_score', 'unposted_current_grade', and 'unposted_final_grade' (see Enrollment documentation for more information on these fields). This argument is ignored if the course is configured to hide final grades.\n\n“current_grading_period_scores”: Optional information to include with each Course. When current_grading_period_scores is given and total_scores is given, any student enrollments will also include the fields 'has_grading_periods', 'totals_for_all_grading_periods_option', 'current_grading_period_title', 'current_grading_period_id', current_period_computed_current_score', 'current_period_computed_final_score', 'current_period_computed_current_grade', and 'current_period_computed_final_grade', as well as (if the user has permission) 'current_period_unposted_current_score', 'current_period_unposted_final_score', 'current_period_unposted_current_grade', and 'current_period_unposted_final_grade' (see Enrollment documentation for more information on these fields). In addition, when this argument is passed, the course will have a 'has_grading_periods' attribute on it. This argument is ignored if the total_scores argument is not included. If the course is configured to hide final grades, the following fields are not returned: 'totals_for_all_grading_periods_option', 'current_period_computed_current_score', 'current_period_computed_final_score', 'current_period_computed_current_grade', 'current_period_computed_final_grade', 'current_period_unposted_current_score', 'current_period_unposted_final_score', 'current_period_unposted_current_grade', and 'current_period_unposted_final_grade'\n\n“term”: Optional information to include with each Course. When term is given, the information for the enrollment term for each course is returned.\n\n“account”: Optional information to include with each Course. When account is given, the account json for each course is returned.\n\n“course_progress”: Optional information to include with each Course. When course_progress is given, each course will include a 'course_progress' object with the fields: 'requirement_count', an integer specifying the total number of requirements in the course, 'requirement_completed_count', an integer specifying the total number of requirements in this course that have been completed, and 'next_requirement_url', a string url to the next requirement item, and 'completed_at', the date the course was completed (null if incomplete). 'next_requirement_url' will be null if all requirements have been completed or the current module does not require sequential progress. “course_progress” will return an error message if the course is not module based or the user is not enrolled as a student in the course.\n\n“sections”: Section enrollment information to include with each Course. Returns an array of hashes containing the section ID (id), section name (name), start and end dates (start_at, end_at), as well as the enrollment type (enrollment_role, e.g. 'StudentEnrollment').\n\n“storage_quota_used_mb”: The amount of storage space used by the files in this course\n\n“total_students”: Optional information to include with each Course. Returns an integer for the total amount of active and invited students.\n\n“passback_status”: Include the grade passback_status\n\n“favorites”: Optional information to include with each Course. Indicates if the user has marked the course as a favorite course.\n\n“teachers”: Teacher information to include with each Course. Returns an array of hashes containing the UserDisplay information for each teacher in the course.\n\n“observed_users”: Optional information to include with each Course. Will include data for observed users if the current user has an observer enrollment.\n\n“tabs”: Optional information to include with each Course. Will include the list of tabs configured for each course. See the List available tabs API for more information.\n\n“course_image”: Optional course image data for when there is a course image and the course image feature flag has been enabled\n\n“concluded”: Optional information to include with each Course. Indicates whether the course has been concluded, taking course and term dates into account.\n\nAllowed values:\nneeds_grading_count, syllabus_body, public_description, total_scores, current_grading_period_scores, term, account, course_progress, sections, storage_quota_used_mb, total_students, passback_status, favorites, teachers, observed_users, course_image, concluded"
										},
										{
											"key": "state[]",
											"value": null,
											"description": "If set, only return courses that are in the given state(s). By default, “available” is returned for students and observers, and anything except “deleted”, for all other enrollment types\n\nAllowed values:\nunpublished, available, completed, deleted"
										}
									]
								},
								"description": "Returns the paginated list of active courses for the current user."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses?enrollment_type&enrollment_role&enrollment_role_id&enrollment_state&exclude_blueprint_courses&include[]&state[]",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses"
											],
											"query": [
												{
													"key": "enrollment_type",
													"value": null,
													"description": "When set, only return courses where the user is enrolled as this type. For example, set to “teacher” to return only courses where the user is enrolled as a Teacher. This argument is ignored if enrollment_role is given.\n\nAllowed values:\nteacher, student, ta, observer, designer"
												},
												{
													"key": "enrollment_role",
													"value": null,
													"description": "Deprecated When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
												},
												{
													"key": "enrollment_role_id",
													"value": null,
													"description": "When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a built_in role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
												},
												{
													"key": "enrollment_state",
													"value": null,
													"description": "When set, only return courses where the user has an enrollment with the given state. This will respect section/course/term date overrides.\n\nAllowed values:\nactive, invited_or_pending, completed"
												},
												{
													"key": "exclude_blueprint_courses",
													"value": null,
													"description": "When set, only return courses that are not configured as blueprint courses."
												},
												{
													"key": "include[]",
													"value": null,
													"description": "needs_grading_count”: Optional information to include with each Course. When needs_grading_count is given, and the current user has grading rights, the total number of submissions needing grading for all assignments is returned.\n\n“syllabus_body”: Optional information to include with each Course. When syllabus_body is given the user-generated html for the course syllabus is returned.\n\n“public_description”: Optional information to include with each Course. When public_description is given the user-generated text for the course public description is returned.\n\n“total_scores”: Optional information to include with each Course. When total_scores is given, any student enrollments will also include the fields 'computed_current_score', 'computed_final_score', 'computed_current_grade', and 'computed_final_grade', as well as (if the user has permission) 'unposted_current_score', 'unposted_final_score', 'unposted_current_grade', and 'unposted_final_grade' (see Enrollment documentation for more information on these fields). This argument is ignored if the course is configured to hide final grades.\n\n“current_grading_period_scores”: Optional information to include with each Course. When current_grading_period_scores is given and total_scores is given, any student enrollments will also include the fields 'has_grading_periods', 'totals_for_all_grading_periods_option', 'current_grading_period_title', 'current_grading_period_id', current_period_computed_current_score', 'current_period_computed_final_score', 'current_period_computed_current_grade', and 'current_period_computed_final_grade', as well as (if the user has permission) 'current_period_unposted_current_score', 'current_period_unposted_final_score', 'current_period_unposted_current_grade', and 'current_period_unposted_final_grade' (see Enrollment documentation for more information on these fields). In addition, when this argument is passed, the course will have a 'has_grading_periods' attribute on it. This argument is ignored if the total_scores argument is not included. If the course is configured to hide final grades, the following fields are not returned: 'totals_for_all_grading_periods_option', 'current_period_computed_current_score', 'current_period_computed_final_score', 'current_period_computed_current_grade', 'current_period_computed_final_grade', 'current_period_unposted_current_score', 'current_period_unposted_final_score', 'current_period_unposted_current_grade', and 'current_period_unposted_final_grade'\n\n“term”: Optional information to include with each Course. When term is given, the information for the enrollment term for each course is returned.\n\n“account”: Optional information to include with each Course. When account is given, the account json for each course is returned.\n\n“course_progress”: Optional information to include with each Course. When course_progress is given, each course will include a 'course_progress' object with the fields: 'requirement_count', an integer specifying the total number of requirements in the course, 'requirement_completed_count', an integer specifying the total number of requirements in this course that have been completed, and 'next_requirement_url', a string url to the next requirement item, and 'completed_at', the date the course was completed (null if incomplete). 'next_requirement_url' will be null if all requirements have been completed or the current module does not require sequential progress. “course_progress” will return an error message if the course is not module based or the user is not enrolled as a student in the course.\n\n“sections”: Section enrollment information to include with each Course. Returns an array of hashes containing the section ID (id), section name (name), start and end dates (start_at, end_at), as well as the enrollment type (enrollment_role, e.g. 'StudentEnrollment').\n\n“storage_quota_used_mb”: The amount of storage space used by the files in this course\n\n“total_students”: Optional information to include with each Course. Returns an integer for the total amount of active and invited students.\n\n“passback_status”: Include the grade passback_status\n\n“favorites”: Optional information to include with each Course. Indicates if the user has marked the course as a favorite course.\n\n“teachers”: Teacher information to include with each Course. Returns an array of hashes containing the UserDisplay information for each teacher in the course.\n\n“observed_users”: Optional information to include with each Course. Will include data for observed users if the current user has an observer enrollment.\n\n“tabs”: Optional information to include with each Course. Will include the list of tabs configured for each course. See the List available tabs API for more information.\n\n“course_image”: Optional course image data for when there is a course image and the course image feature flag has been enabled\n\n“concluded”: Optional information to include with each Course. Indicates whether the course has been concluded, taking course and term dates into account.\n\nAllowed values:\nneeds_grading_count, syllabus_body, public_description, total_scores, current_grading_period_scores, term, account, course_progress, sections, storage_quota_used_mb, total_students, passback_status, favorites, teachers, observed_users, course_image, concluded"
												},
												{
													"key": "state[]",
													"value": null,
													"description": "If set, only return courses that are in the given state(s). By default, “available” is returned for students and observers, and anything except “deleted”, for all other enrollment types\n\nAllowed values:\nunpublished, available, completed, deleted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 370663,\n        \"sis_course_id\": null,\n        \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\n        \"integration_id\": null,\n        \"sis_import_id\": 34,\n        \"name\": \"InstructureCon 2012\",\n        \"course_code\": \"INSTCON12\",\n        \"workflow_state\": \"available\",\n        \"account_id\": 81259,\n        \"root_account_id\": 81259,\n        \"enrollment_term_id\": 34,\n        \"grading_standard_id\": 25,\n        \"grade_passback_setting\": \"nightly_sync\",\n        \"created_at\": \"2012-05-01T00:00:00-06:00\",\n        \"start_at\": \"2012-06-01T00:00:00-06:00\",\n        \"end_at\": \"2012-09-01T00:00:00-06:00\",\n        \"locale\": \"en\",\n        \"enrollments\": null,\n        \"total_students\": 32,\n        \"calendar\": null,\n        \"default_view\": \"feed\",\n        \"syllabus_body\": \"<p>syllabus html goes here</p>\",\n        \"needs_grading_count\": 17,\n        \"term\": null,\n        \"course_progress\": null,\n        \"apply_assignment_group_weights\": true,\n        \"permissions\": {\n            \"create_discussion_topic\": true,\n            \"create_announcement\": true\n        },\n        \"is_public\": true,\n        \"is_public_to_auth_users\": true,\n        \"public_syllabus\": true,\n        \"public_syllabus_to_auth\": true,\n        \"public_description\": \"Come one, come all to InstructureCon 2012!\",\n        \"storage_quota_mb\": 5,\n        \"storage_quota_used_mb\": 5,\n        \"hide_final_grades\": false,\n        \"license\": \"Creative Commons\",\n        \"allow_student_assignment_edits\": false,\n        \"allow_wiki_comments\": false,\n        \"allow_student_forum_attachments\": false,\n        \"open_enrollment\": true,\n        \"self_enrollment\": false,\n        \"restrict_enrollments_to_course_dates\": false,\n        \"course_format\": \"online\",\n        \"access_restricted_by_date\": false,\n        \"time_zone\": \"America/Denver\",\n        \"blueprint\": true,\n        \"blueprint_restrictions\": {\n            \"content\": true,\n            \"points\": true,\n            \"due_dates\": false,\n            \"availability_dates\": false\n        },\n        \"blueprint_restrictions_by_object_type\": {\n            \"assignment\": {\n                \"content\": true,\n                \"points\": true\n            },\n            \"wiki_page\": {\n                \"content\": true\n            }\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - List courses for a user",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/:user_id/courses?include[]=needs_grading_count&state[]=completed&enrollment_state=active",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":user_id",
										"courses"
									],
									"query": [
										{
											"key": "include[]",
											"value": "needs_grading_count",
											"description": "“needs_grading_count”: Optional information to include with each Course. When needs_grading_count is given, and the current user has grading rights, the total number of submissions needing grading for all assignments is returned.\n\n“syllabus_body”: Optional information to include with each Course. When syllabus_body is given the user-generated html for the course syllabus is returned.\n\n“public_description”: Optional information to include with each Course. When public_description is given the user-generated text for the course public description is returned.\n\n“total_scores”: Optional information to include with each Course. When total_scores is given, any student enrollments will also include the fields 'computed_current_score', 'computed_final_score', 'computed_current_grade', and 'computed_final_grade' (see Enrollment documentation for more information on these fields). This argument is ignored if the course is configured to hide final grades.\n\n“current_grading_period_scores”: Optional information to include with each Course. When current_grading_period_scores is given and total_scores is given, any student enrollments will also include the fields 'has_grading_periods', 'totals_for_all_grading_periods_option', 'current_grading_period_title', 'current_grading_period_id', current_period_computed_current_score', 'current_period_computed_final_score', 'current_period_computed_current_grade', and 'current_period_computed_final_grade', as well as (if the user has permission) 'current_period_unposted_current_score', 'current_period_unposted_final_score', 'current_period_unposted_current_grade', and 'current_period_unposted_final_grade' (see Enrollment documentation for more information on these fields). In addition, when this argument is passed, the course will have a 'has_grading_periods' attribute on it. This argument is ignored if the course is configured to hide final grades or if the total_scores argument is not included.\n\n“term”: Optional information to include with each Course. When term is given, the information for the enrollment term for each course is returned.\n\n“account”: Optional information to include with each Course. When account is given, the account json for each course is returned.\n\n“course_progress”: Optional information to include with each Course. When course_progress is given, each course will include a 'course_progress' object with the fields: 'requirement_count', an integer specifying the total number of requirements in the course, 'requirement_completed_count', an integer specifying the total number of requirements in this course that have been completed, and 'next_requirement_url', a string url to the next requirement item, and 'completed_at', the date the course was completed (null if incomplete). 'next_requirement_url' will be null if all requirements have been completed or the current module does not require sequential progress. “course_progress” will return an error message if the course is not module based or the user is not enrolled as a student in the course.\n\n“sections”: Section enrollment information to include with each Course. Returns an array of hashes containing the section ID (id), section name (name), start and end dates (start_at, end_at), as well as the enrollment type (enrollment_role, e.g. 'StudentEnrollment').\n\n“storage_quota_used_mb”: The amount of storage space used by the files in this course\n\n“total_students”: Optional information to include with each Course. Returns an integer for the total amount of active and invited students.\n\n“passback_status”: Include the grade passback_status\n\n“favorites”: Optional information to include with each Course. Indicates if the user has marked the course as a favorite course.\n\n“teachers”: Teacher information to include with each Course. Returns an array of hashes containing the UserDisplay information for each teacher in the course.\n\n“observed_users”: Optional information to include with each Course. Will include data for observed users if the current user has an observer enrollment.\n\n“tabs”: Optional information to include with each Course. Will include the list of tabs configured for each course. See the List available tabs API for more information.\n\n“course_image”: Optional course image data for when there is a course image and the course image feature flag has been enabled\n\n“concluded”: Optional information to include with each Course. Indicates whether the course has been concluded, taking course and term dates into account.\n\nAllowed values:\nneeds_grading_count, syllabus_body, public_description, total_scores, current_grading_period_scores, term, account, course_progress, sections, storage_quota_used_mb, total_students, passback_status, favorites, teachers, observed_users, course_image, concluded"
										},
										{
											"key": "state[]",
											"value": "completed",
											"description": "If set, only return courses that are in the given state(s). By default, “available” is returned for students and observers, and anything except “deleted”, for all other enrollment types\n\nAllowed values:\nunpublished, available, completed, deleted"
										},
										{
											"key": "enrollment_state",
											"value": "active",
											"description": "When set, only return courses where the user has an enrollment with the given state. This will respect section/course/term date overrides.\n\nAllowed values:\nactive, invited_or_pending, completed"
										}
									],
									"variable": [
										{
											"key": "user_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Returns a paginated list of active courses for this user. To view the course list for a user other than yourself, you must be either an observer of that user or an administrator."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/:user_id/courses?include[]=needs_grading_count&state[]=completed&enrollment_state=active",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":user_id",
												"courses"
											],
											"query": [
												{
													"key": "include[]",
													"value": "needs_grading_count"
												},
												{
													"key": "state[]",
													"value": "completed"
												},
												{
													"key": "enrollment_state",
													"value": "active"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "",
													"description": "User ID or SIS User ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 370663,\n        \"sis_course_id\": null,\n        \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\n        \"integration_id\": null,\n        \"sis_import_id\": 34,\n        \"name\": \"InstructureCon 2012\",\n        \"course_code\": \"INSTCON12\",\n        \"workflow_state\": \"available\",\n        \"account_id\": 81259,\n        \"root_account_id\": 81259,\n        \"enrollment_term_id\": 34,\n        \"grading_standard_id\": 25,\n        \"grade_passback_setting\": \"nightly_sync\",\n        \"created_at\": \"2012-05-01T00:00:00-06:00\",\n        \"start_at\": \"2012-06-01T00:00:00-06:00\",\n        \"end_at\": \"2012-09-01T00:00:00-06:00\",\n        \"locale\": \"en\",\n        \"enrollments\": null,\n        \"total_students\": 32,\n        \"calendar\": null,\n        \"default_view\": \"feed\",\n        \"syllabus_body\": \"<p>syllabus html goes here</p>\",\n        \"needs_grading_count\": 17,\n        \"term\": null,\n        \"course_progress\": null,\n        \"apply_assignment_group_weights\": true,\n        \"permissions\": {\n            \"create_discussion_topic\": true,\n            \"create_announcement\": true\n        },\n        \"is_public\": true,\n        \"is_public_to_auth_users\": true,\n        \"public_syllabus\": true,\n        \"public_syllabus_to_auth\": true,\n        \"public_description\": \"Come one, come all to InstructureCon 2012!\",\n        \"storage_quota_mb\": 5,\n        \"storage_quota_used_mb\": 5,\n        \"hide_final_grades\": false,\n        \"license\": \"Creative Commons\",\n        \"allow_student_assignment_edits\": false,\n        \"allow_wiki_comments\": false,\n        \"allow_student_forum_attachments\": false,\n        \"open_enrollment\": true,\n        \"self_enrollment\": false,\n        \"restrict_enrollments_to_course_dates\": false,\n        \"course_format\": \"online\",\n        \"access_restricted_by_date\": false,\n        \"time_zone\": \"America/Denver\",\n        \"blueprint\": true,\n        \"blueprint_restrictions\": {\n            \"content\": true,\n            \"points\": true,\n            \"due_dates\": false,\n            \"availability_dates\": false\n        },\n        \"blueprint_restrictions_by_object_type\": {\n            \"assignment\": {\n                \"content\": true,\n                \"points\": true\n            },\n            \"wiki_page\": {\n                \"content\": true\n            }\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Create Course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"course\": {\r\n    \"sis_course_id\": \"007155-SGP-1930\",\r\n    \"name\": \"Blablacar P0\",\r\n    \"course_code\": \"007155\",\r\n    \"start_at\": \"2019-01-03\",\r\n    \"end_at\": \"2019-03-07\",\r\n    \"term_id\": \"sis_term_id:MBA-1930-ATL\",\r\n    \"license\": \"private\",\r\n    \"is_public\": false,\r\n    \"is_public_to_auth_users\": false,\r\n    \"allow_student_wiki_edits\": false,\r\n    \"allow_student_forum_attachments\": false,\r\n    \"integration_id\": \"sis_course_id:007155-SGP-1930\",\r\n    \"default_view\": \"feed\",\r\n    \"course_format\": \"on_campus\"\r\n  },\r\n  \"enable_sis_reactivation\" : true\r\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/1/courses",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										"1",
										"courses"
									]
								},
								"description": "Create a new course"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"course\": {\r\n    \"sis_course_id\": \"123-122\",\r\n    \"name\": \"InstructureCon 2012\",\r\n    \"course_code\": \"INSTCON12\",\r\n    \"start_at\": \"2019-01-03\",\r\n    \"end_at\": \"2019-03-07\",\r\n    \"term_id\": \"sis_term_id:MBA-1930-ATL\",\r\n    \"license\": \"private\",\r\n    \"is_public\": false,\r\n    \"is_public_to_auth_users\": false,\r\n    \"allow_student_wiki_edits\": false,\r\n    \"allow_student_forum_attachments\": false,\r\n    \"integration_id\": \"sis_course_id:007155-SGP-1930\",\r\n    \"default_view\": \"feed\",\r\n    \"course_format\": \"on_campus\"\r\n  },\r\n  \"enable_sis_reactivation\" : true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{domain}}/api/v1/accounts/1/courses",
											"host": [
												"{{domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												"1",
												"courses"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 370663,\n    \"sis_course_id\": \"123-122\",\n    \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\n    \"integration_id\": null,\n    \"sis_import_id\": 34,\n    \"name\": \"InstructureCon 2012\",\n    \"course_code\": \"INSTCON12\",\n    \"workflow_state\": \"available\",\n    \"account_id\": 81259,\n    \"root_account_id\": 81259,\n    \"enrollment_term_id\": 34,\n    \"grading_standard_id\": 25,\n    \"grade_passback_setting\": \"nightly_sync\",\n    \"created_at\": \"2012-05-01T00:00:00-06:00\",\n    \"start_at\": \"2019-01-03T00:00:00-06:00\",\n    \"end_at\": \"2019-03-07T00:00:00-06:00\",\n    \"locale\": \"en\",\n    \"enrollments\": null,\n    \"total_students\": 32,\n    \"calendar\": null,\n    \"default_view\": \"feed\",\n    \"syllabus_body\": \"<p>syllabus html goes here</p>\",\n    \"needs_grading_count\": 17,\n    \"term\": null,\n    \"course_progress\": null,\n    \"apply_assignment_group_weights\": true,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    },\n    \"is_public\": true,\n    \"is_public_to_auth_users\": true,\n    \"public_syllabus\": true,\n    \"public_syllabus_to_auth\": true,\n    \"public_description\": \"Come one, come all to InstructureCon 2012!\",\n    \"storage_quota_mb\": 5,\n    \"storage_quota_used_mb\": 5,\n    \"hide_final_grades\": false,\n    \"license\": \"Creative Commons\",\n    \"allow_student_assignment_edits\": false,\n    \"allow_wiki_comments\": false,\n    \"allow_student_forum_attachments\": false,\n    \"open_enrollment\": true,\n    \"self_enrollment\": false,\n    \"restrict_enrollments_to_course_dates\": false,\n    \"course_format\": \"online\",\n    \"access_restricted_by_date\": false,\n    \"time_zone\": \"America/Denver\",\n    \"blueprint\": true,\n    \"blueprint_restrictions\": {\n        \"content\": true,\n        \"points\": true,\n        \"due_dates\": false,\n        \"availability_dates\": false\n    },\n    \"blueprint_restrictions_by_object_type\": {\n        \"assignment\": {\n            \"content\": true,\n            \"points\": true\n        },\n        \"wiki_page\": {\n            \"content\": true\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Get a single course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:id?include[]=all_courses&teacher_limit=2",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":id"
									],
									"query": [
										{
											"key": "include[]",
											"value": "all_courses",
											"description": "“all_courses”: Also search recently deleted courses.\n\n“permissions”: Include permissions the current user has for the course.\n\n“observed_users”: include observed users in the enrollments\n\n“course_image”: Optional course image data for when there is a course image and the course image feature flag has been enabled\n\n“concluded”: Optional information to include with each Course. Indicates whether the course has been concluded, taking course and term dates into account.\n\nAllowed values:\nneeds_grading_count, syllabus_body, public_description, total_scores, current_grading_period_scores, term, account, course_progress, sections, storage_quota_used_mb, total_students, passback_status, favorites, teachers, observed_users, all_courses, permissions, observed_users, course_image, concluded"
										},
										{
											"key": "teacher_limit",
											"value": "2",
											"description": "The maximum number of teacher enrollments to show. If the course contains more teachers than this, instead of giving the teacher enrollments, the count of teachers will be given under a teacher_count key."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										}
									]
								},
								"description": "Return information on a single course.\n\nAccepts the same include[] parameters as the list action plus:"
							},
							"response": [
								{
									"name": "200 (Course Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 370663,\n    \"sis_course_id\": null,\n    \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\n    \"integration_id\": null,\n    \"sis_import_id\": 34,\n    \"name\": \"InstructureCon 2012\",\n    \"course_code\": \"INSTCON12\",\n    \"workflow_state\": \"available\",\n    \"account_id\": 81259,\n    \"root_account_id\": 81259,\n    \"enrollment_term_id\": 34,\n    \"grading_standard_id\": 25,\n    \"grade_passback_setting\": \"nightly_sync\",\n    \"created_at\": \"2012-05-01T00:00:00-06:00\",\n    \"start_at\": \"2012-06-01T00:00:00-06:00\",\n    \"end_at\": \"2012-09-01T00:00:00-06:00\",\n    \"locale\": \"en\",\n    \"enrollments\": null,\n    \"total_students\": 32,\n    \"calendar\": null,\n    \"default_view\": \"feed\",\n    \"syllabus_body\": \"<p>syllabus html goes here</p>\",\n    \"needs_grading_count\": 17,\n    \"term\": null,\n    \"course_progress\": null,\n    \"apply_assignment_group_weights\": true,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    },\n    \"is_public\": true,\n    \"is_public_to_auth_users\": true,\n    \"public_syllabus\": true,\n    \"public_syllabus_to_auth\": true,\n    \"public_description\": \"Come one, come all to InstructureCon 2012!\",\n    \"storage_quota_mb\": 5,\n    \"storage_quota_used_mb\": 5,\n    \"hide_final_grades\": false,\n    \"license\": \"Creative Commons\",\n    \"allow_student_assignment_edits\": false,\n    \"allow_wiki_comments\": false,\n    \"allow_student_forum_attachments\": false,\n    \"open_enrollment\": true,\n    \"self_enrollment\": false,\n    \"restrict_enrollments_to_course_dates\": false,\n    \"course_format\": \"online\",\n    \"access_restricted_by_date\": false,\n    \"time_zone\": \"America/Denver\",\n    \"blueprint\": true,\n    \"blueprint_restrictions\": {\n        \"content\": true,\n        \"points\": true,\n        \"due_dates\": false,\n        \"availability_dates\": false\n    },\n    \"blueprint_restrictions_by_object_type\": {\n        \"assignment\": {\n            \"content\": true,\n            \"points\": true\n        },\n        \"wiki_page\": {\n            \"content\": true\n        }\n    }\n}"
								},
								{
									"name": "200 (Account Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}//api/v1/accounts/:account_id/courses/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"",
												"api",
												"v1",
												"accounts",
												":account_id",
												"courses",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 370663,\n    \"sis_course_id\": null,\n    \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\n    \"integration_id\": null,\n    \"sis_import_id\": 34,\n    \"name\": \"InstructureCon 2012\",\n    \"course_code\": \"INSTCON12\",\n    \"workflow_state\": \"available\",\n    \"account_id\": 81259,\n    \"root_account_id\": 81259,\n    \"enrollment_term_id\": 34,\n    \"grading_standard_id\": 25,\n    \"grade_passback_setting\": \"nightly_sync\",\n    \"created_at\": \"2012-05-01T00:00:00-06:00\",\n    \"start_at\": \"2012-06-01T00:00:00-06:00\",\n    \"end_at\": \"2012-09-01T00:00:00-06:00\",\n    \"locale\": \"en\",\n    \"enrollments\": null,\n    \"total_students\": 32,\n    \"calendar\": null,\n    \"default_view\": \"feed\",\n    \"syllabus_body\": \"<p>syllabus html goes here</p>\",\n    \"needs_grading_count\": 17,\n    \"term\": null,\n    \"course_progress\": null,\n    \"apply_assignment_group_weights\": true,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    },\n    \"is_public\": true,\n    \"is_public_to_auth_users\": true,\n    \"public_syllabus\": true,\n    \"public_syllabus_to_auth\": true,\n    \"public_description\": \"Come one, come all to InstructureCon 2012!\",\n    \"storage_quota_mb\": 5,\n    \"storage_quota_used_mb\": 5,\n    \"hide_final_grades\": false,\n    \"license\": \"Creative Commons\",\n    \"allow_student_assignment_edits\": false,\n    \"allow_wiki_comments\": false,\n    \"allow_student_forum_attachments\": false,\n    \"open_enrollment\": true,\n    \"self_enrollment\": false,\n    \"restrict_enrollments_to_course_dates\": false,\n    \"course_format\": \"online\",\n    \"access_restricted_by_date\": false,\n    \"time_zone\": \"America/Denver\",\n    \"blueprint\": true,\n    \"blueprint_restrictions\": {\n        \"content\": true,\n        \"points\": true,\n        \"due_dates\": false,\n        \"availability_dates\": false\n    },\n    \"blueprint_restrictions_by_object_type\": {\n        \"assignment\": {\n            \"content\": true,\n            \"points\": true\n        },\n        \"wiki_page\": {\n            \"content\": true\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Delete Course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:id?event=delete",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":id"
									],
									"query": [
										{
											"key": "event",
											"value": "delete",
											"description": "The action to take on the course.\n\nAllowed values:\ndelete, conclude"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										}
									]
								},
								"description": "Delete or conclude an existing course"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:id?event=delete",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":id"
											],
											"query": [
												{
													"key": "event",
													"value": "delete"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "12",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"delete\": \"true\"\n}"
								}
							]
						},
						{
							"name": "Canvas - List users in course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/users?search_term=John&sort=email&enrollment_type[]=student&enrollment_role=StudentEnrollment&enrollment_role_id=StudentEnrollment&include[]=bio&user_id=22&user_ids[]=22&enrollment_state[]=active",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"users"
									],
									"query": [
										{
											"key": "search_term",
											"value": "John",
											"description": "The partial name or full ID of the users to match and return in the results li"
										},
										{
											"key": "sort",
											"value": "email",
											"description": "When set, sort the results of the search based on the given field.\n\nAllowed values:\nusername, last_login, email, sis_id"
										},
										{
											"key": "enrollment_type[]",
											"value": "student",
											"description": "When set, only return users where the user is enrolled as this type. “student_view” implies include[]=test_student. This argument is ignored if enrollment_role is given.\n\nAllowed values:\nteacher, student, student_view, ta, observer, designer"
										},
										{
											"key": "enrollment_role",
											"value": "StudentEnrollment",
											"description": "Deprecated When set, only return users enrolled with the specified course-level role. This can be a role created with the Add Role API or a base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'"
										},
										{
											"key": "enrollment_role_id",
											"value": "StudentEnrollment",
											"description": "When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a built_in role id with type 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
										},
										{
											"key": "include[]",
											"value": "bio",
											"description": "“enrollments”:\n\nOptionally include with each Course the user's current and invited enrollments. If the user is enrolled as a student, and the account has permission to manage or view all grades, each enrollment will include a 'grades' key with 'current_score', 'final_score', 'current_grade' and 'final_grade' values.\n\n“locked”: Optionally include whether an enrollment is locked.\n\n“avatar_url”: Optionally include avatar_url.\n\n“bio”: Optionally include each user's bio.\n\n“test_student”: Optionally include the course's Test Student,\n\nif present. Default is to not include Test Student.\n\n“custom_links”: Optionally include plugin-supplied custom links for each student,\n\nsuch as analytics information\n\n“current_grading_period_scores”: if enrollments is included as\n\nwell as this directive, the scores returned in the enrollment will be for the current grading period if there is one. A 'grading_period_id' value will also be included with the scores. if grading_period_id is nil there is no current grading period and the score is a total score.\n\n“uuid”: Optionally include the users uuid\n\nAllowed values:\nenrollments, locked, avatar_url, test_student, bio, custom_links, current_grading_period_scores, uuid"
										},
										{
											"key": "user_id",
											"value": "22",
											"description": "If this parameter is given and it corresponds to a user in the course, the page parameter will be ignored and the page containing the specified user will be returned instead."
										},
										{
											"key": "user_ids[]",
											"value": "22",
											"description": "If included, the course users set will only include users with IDs specified by the param. Note: this will not work in conjunction with the “user_id” argument but multiple user_ids can be included."
										},
										{
											"key": "enrollment_state[]",
											"value": "active",
											"description": "When set, only return users where the enrollment workflow state is of one of the given types. “active” and “invited” enrollments are returned by default.\n\nAllowed values:\nactive, invited, rejected, completed, inactive"
										}
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "200 (Search)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/search_users?search_term=John&sort=email&enrollment_type[]=student&enrollment_role=StudentEnrollment&enrollment_role_id=StudentEnrollment&include[]=bio&user_id=22&user_ids[]=22&enrollment_state[]=active",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"search_users"
											],
											"query": [
												{
													"key": "search_term",
													"value": "John",
													"description": "The partial name or full ID of the users to match and return in the results li"
												},
												{
													"key": "sort",
													"value": "email",
													"description": "When set, sort the results of the search based on the given field.\n\nAllowed values:\nusername, last_login, email, sis_id"
												},
												{
													"key": "enrollment_type[]",
													"value": "student",
													"description": "When set, only return users where the user is enrolled as this type. “student_view” implies include[]=test_student. This argument is ignored if enrollment_role is given.\n\nAllowed values:\nteacher, student, student_view, ta, observer, designer"
												},
												{
													"key": "enrollment_role",
													"value": "StudentEnrollment",
													"description": "Deprecated When set, only return users enrolled with the specified course-level role. This can be a role created with the Add Role API or a base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'"
												},
												{
													"key": "enrollment_role_id",
													"value": "StudentEnrollment",
													"description": "When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a built_in role id with type 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
												},
												{
													"key": "include[]",
													"value": "bio",
													"description": "“enrollments”:\n\nOptionally include with each Course the user's current and invited enrollments. If the user is enrolled as a student, and the account has permission to manage or view all grades, each enrollment will include a 'grades' key with 'current_score', 'final_score', 'current_grade' and 'final_grade' values.\n\n“locked”: Optionally include whether an enrollment is locked.\n\n“avatar_url”: Optionally include avatar_url.\n\n“bio”: Optionally include each user's bio.\n\n“test_student”: Optionally include the course's Test Student,\n\nif present. Default is to not include Test Student.\n\n“custom_links”: Optionally include plugin-supplied custom links for each student,\n\nsuch as analytics information\n\n“current_grading_period_scores”: if enrollments is included as\n\nwell as this directive, the scores returned in the enrollment will be for the current grading period if there is one. A 'grading_period_id' value will also be included with the scores. if grading_period_id is nil there is no current grading period and the score is a total score.\n\n“uuid”: Optionally include the users uuid\n\nAllowed values:\nenrollments, locked, avatar_url, test_student, bio, custom_links, current_grading_period_scores, uuid"
												},
												{
													"key": "user_id",
													"value": "22",
													"description": "If this parameter is given and it corresponds to a user in the course, the page parameter will be ignored and the page containing the specified user will be returned instead."
												},
												{
													"key": "user_ids[]",
													"value": "22",
													"description": "If included, the course users set will only include users with IDs specified by the param. Note: this will not work in conjunction with the “user_id” argument but multiple user_ids can be included."
												},
												{
													"key": "enrollment_state[]",
													"value": "active",
													"description": "When set, only return users where the enrollment workflow state is of one of the given types. “active” and “invited” enrollments are returned by default.\n\nAllowed values:\nactive, invited, rejected, completed, inactive"
												}
											],
											"variable": [
												{
													"key": "course_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Sheldon Cooper\",\n        \"sortable_name\": \"Cooper, Sheldon\",\n        \"short_name\": \"Shelly\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"sis_import_id\": 18,\n        \"integration_id\": \"ABC59802\",\n        \"login_id\": \"sheldon@caltech.example.com\",\n        \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n        \"enrollments\": null,\n        \"email\": \"sheldon@caltech.example.com\",\n        \"locale\": \"tlh\",\n        \"last_login\": \"2012-05-30T17:45:25Z\",\n        \"time_zone\": \"America/Denver\",\n        \"bio\": \"I like the Muppets.\"\n    }\n]"
								},
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/users?search_term=John&sort=email&enrollment_type[]=student&enrollment_role=StudentEnrollment&enrollment_role_id=StudentEnrollment&include[]=bio&user_id=22&user_ids[]=22&enrollment_state[]=active",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"users"
											],
											"query": [
												{
													"key": "search_term",
													"value": "John",
													"description": "The partial name or full ID of the users to match and return in the results li"
												},
												{
													"key": "sort",
													"value": "email",
													"description": "When set, sort the results of the search based on the given field.\n\nAllowed values:\nusername, last_login, email, sis_id"
												},
												{
													"key": "enrollment_type[]",
													"value": "student",
													"description": "When set, only return users where the user is enrolled as this type. “student_view” implies include[]=test_student. This argument is ignored if enrollment_role is given.\n\nAllowed values:\nteacher, student, student_view, ta, observer, designer"
												},
												{
													"key": "enrollment_role",
													"value": "StudentEnrollment",
													"description": "Deprecated When set, only return users enrolled with the specified course-level role. This can be a role created with the Add Role API or a base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'"
												},
												{
													"key": "enrollment_role_id",
													"value": "StudentEnrollment",
													"description": "When set, only return courses where the user is enrolled with the specified course-level role. This can be a role created with the Add Role API or a built_in role id with type 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment', or 'DesignerEnrollment'."
												},
												{
													"key": "include[]",
													"value": "bio",
													"description": "“enrollments”:\n\nOptionally include with each Course the user's current and invited enrollments. If the user is enrolled as a student, and the account has permission to manage or view all grades, each enrollment will include a 'grades' key with 'current_score', 'final_score', 'current_grade' and 'final_grade' values.\n\n“locked”: Optionally include whether an enrollment is locked.\n\n“avatar_url”: Optionally include avatar_url.\n\n“bio”: Optionally include each user's bio.\n\n“test_student”: Optionally include the course's Test Student,\n\nif present. Default is to not include Test Student.\n\n“custom_links”: Optionally include plugin-supplied custom links for each student,\n\nsuch as analytics information\n\n“current_grading_period_scores”: if enrollments is included as\n\nwell as this directive, the scores returned in the enrollment will be for the current grading period if there is one. A 'grading_period_id' value will also be included with the scores. if grading_period_id is nil there is no current grading period and the score is a total score.\n\n“uuid”: Optionally include the users uuid\n\nAllowed values:\nenrollments, locked, avatar_url, test_student, bio, custom_links, current_grading_period_scores, uuid"
												},
												{
													"key": "user_id",
													"value": "22",
													"description": "If this parameter is given and it corresponds to a user in the course, the page parameter will be ignored and the page containing the specified user will be returned instead."
												},
												{
													"key": "user_ids[]",
													"value": "22",
													"description": "If included, the course users set will only include users with IDs specified by the param. Note: this will not work in conjunction with the “user_id” argument but multiple user_ids can be included."
												},
												{
													"key": "enrollment_state[]",
													"value": "active",
													"description": "When set, only return users where the enrollment workflow state is of one of the given types. “active” and “invited” enrollments are returned by default.\n\nAllowed values:\nactive, invited, rejected, completed, inactive"
												}
											],
											"variable": [
												{
													"key": "course_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Sheldon Cooper\",\n        \"sortable_name\": \"Cooper, Sheldon\",\n        \"short_name\": \"Shelly\",\n        \"sis_user_id\": \"SHEL93921\",\n        \"sis_import_id\": 18,\n        \"integration_id\": \"ABC59802\",\n        \"login_id\": \"sheldon@caltech.example.com\",\n        \"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n        \"enrollments\": null,\n        \"email\": \"sheldon@caltech.example.com\",\n        \"locale\": \"tlh\",\n        \"last_login\": \"2012-05-30T17:45:25Z\",\n        \"time_zone\": \"America/Denver\",\n        \"bio\": \"I like the Muppets.\"\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Get single user in a course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/users/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "User ID or SIS User ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/users/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "44",
													"description": "Course ID or SIS Course ID"
												},
												{
													"key": "id",
													"value": "2",
													"description": "User ID or SIS User ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n\t\"id\": 2,\n\t\"name\": \"Sheldon Cooper\",\n\t\"sortable_name\": \"Cooper, Sheldon\",\n\t\"short_name\": \"Shelly\",\n\t\"sis_user_id\": \"SHEL93921\",\n\t\"sis_import_id\": 18,\n\t\"integration_id\": \"ABC59802\",\n\t\"login_id\": \"sheldon@caltech.example.com\",\n\t\"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\n\t\"enrollments\": null,\n\t\"email\": \"sheldon@caltech.example.com\",\n\t\"locale\": \"tlh\",\n\t\"last_login\": \"2012-05-30T17:45:25Z\",\n\t\"time_zone\": \"America/Denver\",\n\t\"bio\": \"I like the Muppets.\"\n}\n"
								}
							]
						},
						{
							"name": "Canvas - Update a Course",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"course\" : {\n\t\t\"sis_course_id\" : \"1290\",\n\t\t\"term_id\":\"1910\",\n\t\t\"name\" : \"Coorporate restrcutring\",\n\t\t\"course_code\" : \"corp-struct\",\n\t\t\"license\": \"private\",\n\t\t\"is_public\":false,\n\t\t\"is_public_to_auth_users\" : false,\n\t\t\"allow_student_wiki_edits\" : false,\n\t\t\"allow_student_forum_attachments\" : false,\n\t\t\"default_view\" : \"feed\",\n\t\t\"course_format\" : \"on_campus\",\n\t\t\"allow_wiki_comments\": false,\n\t\t\"open_enrollment\": false,\n\t\t\"self_enrollment\": false,\n\t\t\"restrict_enrollments_to_course_dates\": true,\n\t\t\"integration_id\": \"\",\n\t\t\"hide_final_grades\": true,\n\t\t\"time_zone\": \"America/Denver\",\n\t\t\"apply_assignment_group_weights\": false,\n\t\t\"storage_quota_mb\": 20,\n\t\t\"syllabus_body\": \"\",\n\t\t\"syllabus_course_summary\": \"\",\n\t\t\"grading_standard_id\": \"\",\n\t\t\"grade_passback_setting\": \"\",\n\t\t\"image_id\": \"\",\n\t\t\"image_url\": \"\",\n\t\t\"remove_image\": false,\n\t\t\"blueprint\": \"\",\n\t\t\"blueprint_restrictions\": \"\",\n\t\t\"use_blueprint_restrictions_by_object_type\": \"\",\n\t\t\"blueprint_restrictions_by_object_type\": \"\"\n\n\t},\n\t\"offer\": false,\n\t\"event\": \"offer\"\n}\n"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								}
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"course\" : {\n\t\t\"sis_course_id\" : \"123-122\",\n\t\t\"term_id\":\"1910\",\n\t\t\"name\" : \"InstructureCon 2021\",\n\t\t\"course_code\" : \"corp-struct\",\n\t\t\"license\": \"private\",\n\t\t\"is_public\":false,\n\t\t\"is_public_to_auth_users\" : false,\n\t\t\"allow_student_wiki_edits\" : false,\n\t\t\"allow_student_forum_attachments\" : false,\n\t\t\"default_view\" : \"feed\",\n\t\t\"course_format\" : \"on_campus\",\n\t\t\"allow_wiki_comments\": false,\n\t\t\"open_enrollment\": false,\n\t\t\"self_enrollment\": false,\n\t\t\"restrict_enrollments_to_course_dates\": true,\n\t\t\"integration_id\": \"\",\n\t\t\"hide_final_grades\": true,\n\t\t\"time_zone\": \"America/Denver\",\n\t\t\"apply_assignment_group_weights\": false,\n\t\t\"storage_quota_mb\": 20,\n\t\t\"syllabus_body\": \"\",\n\t\t\"syllabus_course_summary\": \"\",\n\t\t\"grading_standard_id\": \"\",\n\t\t\"grade_passback_setting\": \"\",\n\t\t\"image_id\": \"\",\n\t\t\"image_url\": \"\",\n\t\t\"remove_image\": false,\n\t\t\"blueprint\": \"\",\n\t\t\"blueprint_restrictions\": \"\",\n\t\t\"use_blueprint_restrictions_by_object_type\": \"\",\n\t\t\"blueprint_restrictions_by_object_type\": \"\"\n\n\t},\n\t\"offer\": false,\n\t\"event\": \"offer\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\r\n    \"id\": 370663,\r\n    \"sis_course_id\": \"123-122\",\r\n    \"uuid\": \"WvAHhY5FINzq5IyRIJybGeiXyFkG3SqHUPb7jZY5\",\r\n    \"integration_id\": null,\r\n    \"sis_import_id\": 34,\r\n    \"name\": \"InstructureCon 2012\",\r\n    \"course_code\": \"INSTCON12\",\r\n    \"workflow_state\": \"available\",\r\n    \"account_id\": 81259,\r\n    \"root_account_id\": 81259,\r\n    \"enrollment_term_id\": 34,\r\n    \"grading_standard_id\": 25,\r\n    \"grade_passback_setting\": \"nightly_sync\",\r\n    \"created_at\": \"2012-05-01T00:00:00-06:00\",\r\n    \"start_at\": \"2019-01-03T00:00:00-06:00\",\r\n    \"end_at\": \"2019-03-07T00:00:00-06:00\",\r\n    \"locale\": \"en\",\r\n    \"enrollments\": null,\r\n    \"total_students\": 32,\r\n    \"calendar\": null,\r\n    \"default_view\": \"feed\",\r\n    \"syllabus_body\": \"<p>syllabus html goes here</p>\",\r\n    \"needs_grading_count\": 17,\r\n    \"term\": null,\r\n    \"course_progress\": null,\r\n    \"apply_assignment_group_weights\": true,\r\n    \"permissions\": {\r\n        \"create_discussion_topic\": true,\r\n        \"create_announcement\": true\r\n    },\r\n    \"is_public\": true,\r\n    \"is_public_to_auth_users\": true,\r\n    \"public_syllabus\": true,\r\n    \"public_syllabus_to_auth\": true,\r\n    \"public_description\": \"Come one, come all to InstructureCon 2012!\",\r\n    \"storage_quota_mb\": 5,\r\n    \"storage_quota_used_mb\": 5,\r\n    \"hide_final_grades\": false,\r\n    \"license\": \"Creative Commons\",\r\n    \"allow_student_assignment_edits\": false,\r\n    \"allow_wiki_comments\": false,\r\n    \"allow_student_forum_attachments\": false,\r\n    \"open_enrollment\": true,\r\n    \"self_enrollment\": false,\r\n    \"restrict_enrollments_to_course_dates\": false,\r\n    \"course_format\": \"online\",\r\n    \"access_restricted_by_date\": false,\r\n    \"time_zone\": \"America/Denver\",\r\n    \"blueprint\": true,\r\n    \"blueprint_restrictions\": {\r\n        \"content\": true,\r\n        \"points\": true,\r\n        \"due_dates\": false,\r\n        \"availability_dates\": false\r\n    },\r\n    \"blueprint_restrictions_by_object_type\": {\r\n        \"assignment\": {\r\n            \"content\": true,\r\n            \"points\": true\r\n        },\r\n        \"wiki_page\": {\r\n            \"content\": true\r\n        }\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Canvas - Update courses",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"course\" : {\n\t\t\"sis_course_id\" : \"002849\",\n\t\t\"term_id\":\"sis_term_id:1840-MBA\",\n\t\t\"name\" : \"Coorporate restrcutring\",\n\t\t\"course_code\" : \"002849\",\n\t\t\"license\": \"private\",\n\t\t\"is_public\":false,\n\t\t\"is_public_to_auth_users\" : false,\n\t\t\"allow_student_wiki_edits\" : false,\n\t\t\"allow_student_forum_attachments\" : false,\n\t\t\"default_view\" : \"feed\",\n\t\t\"course_format\" : \"on_campus\"\n\t}\n}\n"
								},
								"url": {
									"raw": "{{domain}}/api/v1/accounts/:account_id/courses",
									"host": [
										"{{domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"courses"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										}
									]
								},
								"description": "Update multiple courses in an account. Operates asynchronously; use the progress endpoint to query the status of an operation.\n\nThe action to take on each course. Must be one of 'offer', 'conclude', 'delete', or 'undelete'."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"course_ids\": [1,233,45],\n\t\"event\": \"offer\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/courses",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"courses"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"context_id\": 1,\n    \"context_type\": \"Account\",\n    \"user_id\": 123,\n    \"tag\": \"course_batch_update\",\n    \"completion\": 100,\n    \"workflow_state\": \"completed\",\n    \"created_at\": \"2013-01-15T15:00:00Z\",\n    \"updated_at\": \"2013-01-15T15:04:00Z\",\n    \"message\": \"17 courses processed\",\n    \"results\": {\n        \"id\": \"123\"\n    },\n    \"url\": \"https://canvas.example.edu/api/v1/progress/1\"\n}"
								}
							]
						},
						{
							"name": "Canvas - Get Course Section",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/sections/:id?include[]=students",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"sections",
										":id"
									],
									"query": [
										{
											"key": "include[]",
											"value": "students",
											"description": "“students”: Associations to include with the group. Note: this is only available if you have permission to view users or grades in the course\n\n“avatar_url”: Include the avatar URLs for students returned.\n\n“enrollments”: If 'students' is also included, return the section enrollment for each student\n\n“total_students”: Returns the total amount of active and invited students for the course section\n\n“passback_status”: Include the grade passback status.\n\nAllowed values:\nstudents, avatar_url, enrollments, total_students, passback_status"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Section ID or SIS Section ID"
										}
									]
								},
								"description": "Gets details about a specific section"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/sections/:id?include[]=students",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"sections",
												":id"
											],
											"query": [
												{
													"key": "include[]",
													"value": "students",
													"description": "“students”: Associations to include with the group. Note: this is only available if you have permission to view users or grades in the course\n\n“avatar_url”: Include the avatar URLs for students returned.\n\n“enrollments”: If 'students' is also included, return the section enrollment for each student\n\n“total_students”: Returns the total amount of active and invited students for the course section\n\n“passback_status”: Include the grade passback status.\n\nAllowed values:\nstudents, avatar_url, enrollments, total_students, passback_status"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "",
													"description": "Section ID or SIS Section ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"name\": \"Section A\",\n    \"sis_section_id\": \"s34643\",\n    \"integration_id\": \"3452342345\",\n    \"sis_import_id\": 47,\n    \"course_id\": 7,\n    \"sis_course_id\": \"7\",\n    \"start_at\": \"2012-06-01T00:00:00-06:00\",\n    \"end_at\": null,\n    \"restrict_enrollments_to_section_dates\": null,\n    \"nonxlist_course_id\": null,\n    \"total_students\": 13\n}"
								}
							]
						},
						{
							"name": "Canvas - List Course Sections",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/sections?include[]=students",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"sections"
									],
									"query": [
										{
											"key": "include[]",
											"value": "students",
											"description": "“students”: Associations to include with the group. Note: this is only available if you have permission to view users or grades in the course\n\n“avatar_url”: Include the avatar URLs for students returned.\n\n“enrollments”: If 'students' is also included, return the section enrollment for each student\n\n“total_students”: Returns the total amount of active and invited students for the course section\n\n“passback_status”: Include the grade passback status.\n\nAllowed values:\nstudents, avatar_url, enrollments, total_students, passback_status"
										}
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										}
									]
								},
								"description": "A paginated list of the list of sections for this course."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/sections?include[]=students",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"sections"
											],
											"query": [
												{
													"key": "include[]",
													"value": "students",
													"description": "“students”: Associations to include with the group. Note: this is only available if you have permission to view users or grades in the course\n\n“avatar_url”: Include the avatar URLs for students returned.\n\n“enrollments”: If 'students' is also included, return the section enrollment for each student\n\n“total_students”: Returns the total amount of active and invited students for the course section\n\n“passback_status”: Include the grade passback status.\n\nAllowed values:\nstudents, avatar_url, enrollments, total_students, passback_status"
												}
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Section A\",\n        \"sis_section_id\": \"s34643\",\n        \"integration_id\": \"3452342345\",\n        \"sis_import_id\": 47,\n        \"course_id\": 7,\n        \"sis_course_id\": \"7\",\n        \"start_at\": \"2012-06-01T00:00:00-06:00\",\n        \"end_at\": null,\n        \"restrict_enrollments_to_section_dates\": null,\n        \"nonxlist_course_id\": null,\n        \"total_students\": 13\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Create Course Section",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"course_section\": {\r\n\t\t\"name\": \"Section A\",\r\n\t\t\"sis_section_id\": \"s34643\",\r\n\t\t\"integration_id\": \"3452342345\",\r\n\t\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\r\n\t\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\r\n\t\t\"restrict_enrollments_to_section_dates\": false\r\n\t},\r\n\t\"enable_sis_reactivation\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/courses/:course_id/sections",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"courses",
										":course_id",
										"sections"
									],
									"variable": [
										{
											"key": "course_id",
											"value": "",
											"type": "string",
											"description": "Course ID or SIS Course ID"
										}
									]
								},
								"description": "Creates a new section for this course."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"course_section\": {\r\n\t\t\"name\": \"Section A\",\r\n\t\t\"sis_section_id\": \"s34643\",\r\n\t\t\"integration_id\": \"3452342345\",\r\n\t\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\r\n\t\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\r\n\t\t\"restrict_enrollments_to_section_dates\": false\r\n\t},\r\n\t\"enable_sis_reactivation\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/sections?include[]=students",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"sections"
											],
											"query": [
												{
													"key": "include[]",
													"value": "students",
													"description": "“students”: Associations to include with the group. Note: this is only available if you have permission to view users or grades in the course\n\n“avatar_url”: Include the avatar URLs for students returned.\n\n“enrollments”: If 'students' is also included, return the section enrollment for each student\n\n“total_students”: Returns the total amount of active and invited students for the course section\n\n“passback_status”: Include the grade passback status.\n\nAllowed values:\nstudents, avatar_url, enrollments, total_students, passback_status"
												}
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n\t\"id\": 1,\n\t\"name\": \"Section A\",\n\t\"sis_section_id\": \"s34643\",\n\t\"integration_id\": \"3452342345\",\n\t\"sis_import_id\": 47,\n\t\"course_id\": 7,\n\t\"sis_course_id\": \"7\",\n\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\n\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\n\t\"restrict_enrollments_to_section_dates\": null,\n\t\"nonxlist_course_id\": null,\n\t\"total_students\": 13\n}\n"
								}
							]
						},
						{
							"name": "Canvas - Update Course Section",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"course_section\": {\r\n\t\t\"name\": \"Section A\",\r\n\t\t\"sis_section_id\": \"s34643\",\r\n\t\t\"integration_id\": \"3452342345\",\r\n\t\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\r\n\t\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\r\n\t\t\"restrict_enrollments_to_section_dates\": false\r\n\t}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/sections/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"sections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Section ID or SIS Section ID"
										}
									]
								},
								"description": "Creates a new section for this course."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"course_section\": {\r\n\t\t\"name\": \"Section A\",\r\n\t\t\"sis_section_id\": \"s34643\",\r\n\t\t\"integration_id\": \"3452342345\",\r\n\t\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\r\n\t\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\r\n\t\t\"restrict_enrollments_to_section_dates\": false\r\n\t}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/sections/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"sections",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n\t\"id\": 1,\n\t\"name\": \"Section A\",\n\t\"sis_section_id\": \"s34643\",\n\t\"integration_id\": \"3452342345\",\n\t\"sis_import_id\": 47,\n\t\"course_id\": 7,\n\t\"sis_course_id\": \"7\",\n\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\n\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\n\t\"restrict_enrollments_to_section_dates\": null,\n\t\"nonxlist_course_id\": null,\n\t\"total_students\": 13\n}\n"
								}
							]
						},
						{
							"name": "Canvas - Deete Course Section",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/sections/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"sections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Delete an existing section. Returns the former Section."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/sections/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"sections",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n\t\"id\": 1,\n\t\"name\": \"Section A\",\n\t\"sis_section_id\": \"s34643\",\n\t\"integration_id\": \"3452342345\",\n\t\"sis_import_id\": 47,\n\t\"course_id\": 7,\n\t\"sis_course_id\": \"7\",\n\t\"start_at\": \"2021-06-01T00:00:00-06:00\",\n\t\"end_at\": \"2021-09-01T00:00:00-06:00\",\n\t\"restrict_enrollments_to_section_dates\": null,\n\t\"nonxlist_course_id\": null,\n\t\"total_students\": 13\n}\n"
								}
							]
						}
					]
				},
				{
					"name": "Student Groups",
					"item": [
						{
							"name": "Canvas - List your groups",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/users/self/groups?context_type=Course&include[]=tabs",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"self",
										"groups"
									],
									"query": [
										{
											"key": "context_type",
											"value": "Course",
											"description": "Only include groups that are in this type of context.\n\nAllowed values:\nAccount, Course"
										},
										{
											"key": "include[]",
											"value": "tabs",
											"description": "“tabs”: Include the list of tabs configured for each group. See the List available tabs API for more information.\n\nAllowed values:\ntabs"
										}
									]
								},
								"description": "Returns a paginated list of active groups for the current user."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/users/self/groups?context_type=Course&include[]=tabs",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"self",
												"groups"
											],
											"query": [
												{
													"key": "context_type",
													"value": "Course",
													"description": "Only include groups that are in this type of context.\n\nAllowed values:\nAccount, Course"
												},
												{
													"key": "include[]",
													"value": "tabs",
													"description": "“tabs”: Include the list of tabs configured for each group. See the List available tabs API for more information.\n\nAllowed values:\ntabs"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 17,\n        \"name\": \"Math Group 1\",\n        \"description\": null,\n        \"is_public\": false,\n        \"followed_by_user\": false,\n        \"join_level\": \"invitation_only\",\n        \"members_count\": 0,\n        \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n        \"context_type\": \"Course\",\n        \"course_id\": 3,\n        \"role\": null,\n        \"group_category_id\": 4,\n        \"sis_group_id\": \"group4a\",\n        \"sis_import_id\": 14,\n        \"storage_quota_mb\": 50,\n        \"permissions\": {\n            \"create_discussion_topic\": true,\n            \"create_announcement\": true\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - List the groups available in a context",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/groups?only_own_groups&include[]",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"groups"
									],
									"query": [
										{
											"key": "only_own_groups",
											"value": null,
											"description": "Will only include groups that the user belongs to if this is set"
										},
										{
											"key": "include[]",
											"value": null,
											"description": "“tabs”: Include the list of tabs configured for each group. See the List available tabs API for more information.\n\nAllowed values:\ntabs"
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID\n"
										}
									]
								},
								"description": "Returns the paginated list of active groups in the given context that are visible to user."
							},
							"response": [
								{
									"name": "200 (Account Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"groups"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 17,\n        \"name\": \"Math Group 1\",\n        \"description\": null,\n        \"is_public\": false,\n        \"followed_by_user\": false,\n        \"join_level\": \"invitation_only\",\n        \"members_count\": 0,\n        \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n        \"context_type\": \"Course\",\n        \"course_id\": 3,\n        \"role\": null,\n        \"group_category_id\": 4,\n        \"sis_group_id\": \"group4a\",\n        \"sis_import_id\": 14,\n        \"storage_quota_mb\": 50,\n        \"permissions\": {\n            \"create_discussion_topic\": true,\n            \"create_announcement\": true\n        }\n    }\n]"
								},
								{
									"name": "200 (Course Scope)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"groups"
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 17,\n        \"name\": \"Math Group 1\",\n        \"description\": null,\n        \"is_public\": false,\n        \"followed_by_user\": false,\n        \"join_level\": \"invitation_only\",\n        \"members_count\": 0,\n        \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n        \"context_type\": \"Course\",\n        \"course_id\": 3,\n        \"role\": null,\n        \"group_category_id\": 4,\n        \"sis_group_id\": \"group4a\",\n        \"sis_import_id\": 14,\n        \"storage_quota_mb\": 50,\n        \"permissions\": {\n            \"create_discussion_topic\": true,\n            \"create_announcement\": true\n        }\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Get a single group",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "",
											"type": "string",
											"description": "Groupd ID or SIS Group ID"
										}
									]
								},
								"description": "Returns the data for a single group, or a 401 if the caller doesn't have the rights to see it."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/courses/:course_id/groups?include[]",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"courses",
												":course_id",
												"groups"
											],
											"query": [
												{
													"key": "include[]",
													"value": null,
													"description": "“permissions”: Include permissions the current user has for the group.\n\n“tabs”: Include the list of tabs configured for each group. See the List available tabs API for more information.\n\nAllowed values:\npermissions, tabs"
												}
											],
											"variable": [
												{
													"key": "course_id",
													"value": "",
													"description": "Course ID or SIS Course ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "\n{\n\t\"id\": 17,\n\t\"name\": \"Math Group 1\",\n\t\"description\": null,\n\t\"is_public\": false,\n\t\"followed_by_user\": false,\n\t\"join_level\": \"invitation_only\",\n\t\"members_count\": 0,\n\t\"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n\t\"context_type\": \"Course\",\n\t\"course_id\": 3,\n\t\"role\": null,\n\t\"group_category_id\": 4,\n\t\"sis_group_id\": \"group4a\",\n\t\"sis_import_id\": 14,\n\t\"storage_quota_mb\": 50,\n\t\"permissions\": {\n\t\t\"create_discussion_topic\": true,\n\t\t\"create_announcement\": true\n\t}\n}\n"
								}
							]
						},
						{
							"name": "Canvas - List Group Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/users",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"users"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "Returns a paginated list of users in the group."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/users",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"users"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "",
													"description": "Group ID or SIS Group ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\r\n\t{\r\n\t\t\"id\": 2,\r\n\t\t\"name\": \"Sheldon Cooper\",\r\n\t\t\"sortable_name\": \"Cooper, Sheldon\",\r\n\t\t\"short_name\": \"Shelly\",\r\n\t\t\"sis_user_id\": \"SHEL93921\",\r\n\t\t\"sis_import_id\": 18,\r\n\t\t\"integration_id\": \"ABC59802\",\r\n\t\t\"login_id\": \"sheldon@caltech.example.com\",\r\n\t\t\"avatar_url\": \"https://en.gravatar.com/avatar/d8cb8c8cd40ddf0cd05241443a591868?s=80&r=g\",\r\n\t\t\"enrollments\": null,\r\n\t\t\"email\": \"sheldon@caltech.example.com\",\r\n\t\t\"locale\": \"tlh\",\r\n\t\t\"last_login\": \"2012-05-30T17:45:25Z\",\r\n\t\t\"time_zone\": \"America/Denver\",\r\n\t\t\"bio\": \"I like the Muppets.\"\r\n\t}\r\n]"
								}
							]
						},
						{
							"name": "Canvas - Create Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups"
									]
								},
								"description": "Creates a new group. Groups created using the “/api/v1/groups/” endpoint will be community groups."
							},
							"response": [
								{
									"name": "200 (Groups Category Scope)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Math Group 1\",\n\t\"description\": \"Math Group 1\",\n\t\"is_public\": false,\n\t\"join_level\": \"invitation_only\",\n\t\"storage_quota_mb\": 20,\n\t\"sis_group_id\": \"group4a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/group_categories/:group_category_id/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"group_categories",
												":group_category_id",
												"groups"
											],
											"variable": [
												{
													"key": "group_category_id",
													"value": "",
													"description": "Groupd Category ID or SIS Group Category ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 17,\n    \"name\": \"Math Group 1\",\n    \"description\": null,\n    \"is_public\": false,\n    \"followed_by_user\": false,\n    \"join_level\": \"invitation_only\",\n    \"members_count\": 0,\n    \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n    \"context_type\": \"Course\",\n    \"course_id\": 3,\n    \"role\": null,\n    \"group_category_id\": 4,\n    \"sis_group_id\": \"group4a\",\n    \"sis_import_id\": 14,\n    \"storage_quota_mb\": 50,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    }\n}"
								},
								{
									"name": "200 (Groups Scope)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Math Group 1\",\n\t\"description\": \"Math Group 1\",\n\t\"is_public\": false,\n\t\"join_level\": \"invitation_only\",\n\t\"storage_quota_mb\": 20,\n\t\"sis_group_id\": \"group4a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 17,\n    \"name\": \"Math Group 1\",\n    \"description\": null,\n    \"is_public\": false,\n    \"followed_by_user\": false,\n    \"join_level\": \"invitation_only\",\n    \"members_count\": 0,\n    \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n    \"context_type\": \"Course\",\n    \"course_id\": 3,\n    \"role\": null,\n    \"group_category_id\": 4,\n    \"sis_group_id\": \"group4a\",\n    \"sis_import_id\": 14,\n    \"storage_quota_mb\": 50,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Edit  a Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Math Group 1\",\n\t\"description\": \"Math Group 1\",\n\t\"is_public\": false,\n\t\"join_level\": \"invitation_only\",\n\t\"storage_quota_mb\": 20,\n\t\"sis_group_id\": \"group4a\",\n\t\"avatar_id\": null,\n\t\"members\": []\n}"
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "Modifies an existing group. Note that to set an avatar image for the group, you must first upload the image file to the group, and the use the id in the response as the argument to this function. See the File Upload Documentation for details on the file upload workflow."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Math Group 1\",\n\t\"description\": \"Math Group 1\",\n\t\"is_public\": false,\n\t\"join_level\": \"invitation_only\",\n\t\"storage_quota_mb\": 20,\n\t\"sis_group_id\": \"group4a\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 17,\n    \"name\": \"Math Group 1\",\n    \"description\": null,\n    \"is_public\": false,\n    \"followed_by_user\": false,\n    \"join_level\": \"invitation_only\",\n    \"members_count\": 0,\n    \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n    \"context_type\": \"Course\",\n    \"course_id\": 3,\n    \"role\": null,\n    \"group_category_id\": 4,\n    \"sis_group_id\": \"group4a\",\n    \"sis_import_id\": 14,\n    \"storage_quota_mb\": 50,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Delete a Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "Deletes a group and removes all members."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 17,\n    \"name\": \"Math Group 1\",\n    \"description\": null,\n    \"is_public\": false,\n    \"followed_by_user\": false,\n    \"join_level\": \"invitation_only\",\n    \"members_count\": 0,\n    \"avatar_url\": \"https://<canvas>/files/avatar_image.png\",\n    \"context_type\": \"Course\",\n    \"course_id\": 3,\n    \"role\": null,\n    \"group_category_id\": 4,\n    \"sis_group_id\": \"group4a\",\n    \"sis_import_id\": 14,\n    \"storage_quota_mb\": 50,\n    \"permissions\": {\n        \"create_discussion_topic\": true,\n        \"create_announcement\": true\n    }\n}"
								}
							]
						},
						{
							"name": "Canvas - Invite others to a group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/invite?invitees[]=leonard@example.com",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"invite"
									],
									"query": [
										{
											"key": "invitees[]",
											"value": "leonard@example.com",
											"description": "An array of email addresses to be sent invitations."
										}
									],
									"variable": [
										{
											"key": "group_id",
											"value": "12",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "Sends an invitation to all supplied email addresses which will allow the receivers to join the group."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/invite?invitees[]=leonard@example.com",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"invite"
											],
											"query": [
												{
													"key": "invitees[]",
													"value": "leonard@example.com",
													"description": "An array of email addresses to be sent invitations."
												}
											],
											"variable": [
												{
													"key": "group_id",
													"value": "",
													"description": "Group ID or SIS Group ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Canvas - List group memberships",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"memberships"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "A paginated list of the members of a group."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"memberships"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "",
													"description": "Group ID or SIS Group ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 92,\n        \"group_id\": 17,\n        \"user_id\": 3,\n        \"workflow_state\": \"accepted\",\n        \"moderator\": true,\n        \"just_created\": true,\n        \"sis_import_id\": 4\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Get a single group membership",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"memberships",
										":membership_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "2",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										},
										{
											"key": "membership_id",
											"value": "12",
											"type": "string",
											"description": "Memebership ID or SIS Group Memebership  ID"
										}
									]
								},
								"description": "Returns the group membership with the given membership id or user id.A paginated list of the members of a group."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "1",
													"description": "Group ID or SIS Group ID"
												},
												{
													"key": "membership_id",
													"value": "12",
													"description": "Memebership ID or SIS Group Memebership  ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 92,\n    \"group_id\": 17,\n    \"user_id\": 3,\n    \"workflow_state\": \"accepted\",\n    \"moderator\": true,\n    \"just_created\": true,\n    \"sis_import_id\": 4\n}"
								}
							]
						},
						{
							"name": "Canvas - Create a membership",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships?user_id=24",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"memberships"
									],
									"query": [
										{
											"key": "user_id",
											"value": "24",
											"description": "User ID or SIS User ID"
										}
									],
									"variable": [
										{
											"key": "group_id",
											"value": "2",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										}
									]
								},
								"description": "Join, or request to join, a group, depending on the join_level of the group. If the membership or join request already exists, then it is simply returned"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships?user_id=3",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"memberships"
											],
											"query": [
												{
													"key": "user_id",
													"value": "3"
												}
											],
											"variable": [
												{
													"key": "group_id",
													"value": "92",
													"description": "Group ID or SIS Group ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 92,\n    \"group_id\": 17,\n    \"user_id\": 3,\n    \"workflow_state\": \"accepted\",\n    \"moderator\": true,\n    \"just_created\": true,\n    \"sis_import_id\": 4\n}"
								}
							]
						},
						{
							"name": "Canvas - Update  a Membership",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id?workflow_state=accepted&moderator=false",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"memberships",
										":membership_id"
									],
									"query": [
										{
											"key": "workflow_state",
											"value": "accepted",
											"description": "\t\nCurrently, the only allowed value is “accepted”\n\nAllowed values:\naccepted"
										},
										{
											"key": "moderator",
											"value": "false"
										}
									],
									"variable": [
										{
											"key": "group_id",
											"value": "2",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										},
										{
											"key": "membership_id",
											"value": "98",
											"type": "string",
											"description": "Membership ID or SIS Group Membership ID"
										}
									]
								},
								"description": "Accept a membership request, or add/remove moderator rights."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id?workflow_state=accepted&moderator=false",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"memberships",
												":membership_id"
											],
											"query": [
												{
													"key": "workflow_state",
													"value": "accepted"
												},
												{
													"key": "moderator",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "group_id",
													"value": "17",
													"description": "Group ID or SIS Group ID"
												},
												{
													"key": "membership_id",
													"value": "92"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 92,\n    \"group_id\": 17,\n    \"user_id\": 3,\n    \"workflow_state\": \"accepted\",\n    \"moderator\": false,\n    \"just_created\": true,\n    \"sis_import_id\": 4\n}"
								}
							]
						},
						{
							"name": "Canvas - Leave a group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"groups",
										":group_id",
										"memberships",
										":membership_id"
									],
									"variable": [
										{
											"key": "group_id",
											"value": "17",
											"type": "string",
											"description": "Group ID or SIS Group ID"
										},
										{
											"key": "membership_id",
											"value": "92",
											"type": "string",
											"description": "Membership ID or SIS Group Membership ID"
										}
									]
								},
								"description": "Leave a group if you are allowed to leave (some groups, such as sets of course groups created by teachers, cannot be left). You may also use 'self' in place of a membership_id."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"name": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/groups/:group_id/memberships/:membership_id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"groups",
												":group_id",
												"memberships",
												":membership_id"
											],
											"variable": [
												{
													"key": "group_id",
													"value": "17",
													"description": "Group ID or SIS Group ID"
												},
												{
													"key": "membership_id",
													"value": "92"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 92,\n    \"group_id\": 17,\n    \"user_id\": 3,\n    \"workflow_state\": \"deleted\",\n    \"moderator\": false,\n    \"just_created\": true,\n    \"sis_import_id\": 4\n}"
								}
							]
						}
					]
				},
				{
					"name": "SIS Import",
					"item": [
						{
							"name": "Canvas - Get SIS Import List",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sis_imports"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Returns the list of SIS imports for an account"
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sis_imports"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "[\n    {\n        \"id\": 1,\n        \"created_at\": \"2013-12-01T23:59:00-06:00\",\n        \"ended_at\": \"2013-12-02T00:03:21-06:00\",\n        \"updated_at\": \"2013-12-02T00:03:21-06:00\",\n        \"workflow_state\": \"imported\",\n        \"data\": null,\n        \"statistics\": null,\n        \"progress\": \"100\",\n        \"errors_attachment\": null,\n        \"user\": null,\n        \"processing_warnings\": [\n            [\n                \"students.csv\",\n                \"user John Doe has already claimed john_doe's requested login information, skipping\"\n            ]\n        ],\n        \"processing_errors\": [\n            [\n                \"students.csv\",\n                \"Error while importing CSV. Please contact support.\"\n            ]\n        ],\n        \"batch_mode\": true,\n        \"batch_mode_term_id\": \"1234\",\n        \"multi_term_batch_mode\": false,\n        \"skip_deletes\": false,\n        \"override_sis_stickiness\": false,\n        \"add_sis_stickiness\": false,\n        \"clear_sis_stickiness\": false,\n        \"diffing_data_set_identifier\": \"account-5-enrollments\",\n        \"diffed_against_import_id\": 1,\n        \"csv_attachments\": []\n    }\n]"
								}
							]
						},
						{
							"name": "Canvas - Get the current importing SIS import",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/importing",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sis_imports",
										"importing"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string"
										}
									]
								},
								"description": "Returns the SIS imports that are currently processing for an account. If no imports are running, will return an empty array."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/importing",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sis_imports",
												"importing"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"created_at\": \"2013-12-01T23:59:00-06:00\",\n    \"ended_at\": \"2013-12-02T00:03:21-06:00\",\n    \"updated_at\": \"2013-12-02T00:03:21-06:00\",\n    \"workflow_state\": \"imported\",\n    \"data\": null,\n    \"statistics\": null,\n    \"progress\": \"100\",\n    \"errors_attachment\": null,\n    \"user\": null,\n    \"processing_warnings\": [\n        [\n            \"students.csv\",\n            \"user John Doe has already claimed john_doe's requested login information, skipping\"\n        ]\n    ],\n    \"processing_errors\": [\n        [\n            \"students.csv\",\n            \"Error while importing CSV. Please contact support.\"\n        ]\n    ],\n    \"batch_mode\": true,\n    \"batch_mode_term_id\": \"1234\",\n    \"multi_term_batch_mode\": false,\n    \"skip_deletes\": false,\n    \"override_sis_stickiness\": false,\n    \"add_sis_stickiness\": false,\n    \"clear_sis_stickiness\": false,\n    \"diffing_data_set_identifier\": \"account-5-enrollments\",\n    \"diffed_against_import_id\": 1,\n    \"csv_attachments\": []\n}"
								}
							]
						},
						{
							"name": "Canvas - Get SIS import status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{canvas_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/:id",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sis_imports",
										":id"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "",
											"type": "string",
											"description": "Import ID\n"
										}
									]
								},
								"description": "Get the status of an already created SIS import."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/:id",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sis_imports",
												":id"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Import ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"created_at\": \"2013-12-01T23:59:00-06:00\",\n    \"ended_at\": \"2013-12-02T00:03:21-06:00\",\n    \"updated_at\": \"2013-12-02T00:03:21-06:00\",\n    \"workflow_state\": \"imported\",\n    \"data\": null,\n    \"statistics\": null,\n    \"progress\": \"100\",\n    \"errors_attachment\": null,\n    \"user\": null,\n    \"processing_warnings\": [\n        [\n            \"students.csv\",\n            \"user John Doe has already claimed john_doe's requested login information, skipping\"\n        ]\n    ],\n    \"processing_errors\": [\n        [\n            \"students.csv\",\n            \"Error while importing CSV. Please contact support.\"\n        ]\n    ],\n    \"batch_mode\": true,\n    \"batch_mode_term_id\": \"1234\",\n    \"multi_term_batch_mode\": false,\n    \"skip_deletes\": false,\n    \"override_sis_stickiness\": false,\n    \"add_sis_stickiness\": false,\n    \"clear_sis_stickiness\": false,\n    \"diffing_data_set_identifier\": \"account-5-enrollments\",\n    \"diffed_against_import_id\": 1,\n    \"csv_attachments\": []\n}"
								}
							]
						},
						{
							"name": "Canvas - SIS Import",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/zip"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports.json?import_type=instructure_csv&extension=zip&batch_mode=false&batch_mode_term_id=1900&multi_term_batch_mode=false&skip_deletes=false&override_sis_stickiness=true&add_sis_stickiness=true&clear_sis_stickiness=true&diffing_data_set_identifier=true&diffing_remaster_data_set=false&diffing_drop_status=deleted&change_threshold=100&diff_row_count_threshold=100",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sis_imports.json"
									],
									"query": [
										{
											"key": "import_type",
											"value": "instructure_csv",
											"description": "Choose the data format for reading SIS data. With a standard Canvas install, this option can only be 'instructure_csv', and if unprovided, will be assumed to be so. Can be part of the query string."
										},
										{
											"key": "extension",
											"value": "zip",
											"description": "There are two ways to post SIS import data - either via a multipart/form-data form-field-style attachment, or via a non-multipart raw post request.\n\n'attachment' is required for multipart/form-data style posts. Assumed to be SIS data from a file upload form field named 'attachment'."
										},
										{
											"key": "batch_mode",
											"value": "false",
											"description": "If set, this SIS import will be run in batch mode, deleting any data previously imported via SIS that is not present in this latest import. See the SIS CSV Format page for details. Batch mode cannot be used with diffing"
										},
										{
											"key": "batch_mode_term_id",
											"value": "1900",
											"description": "Limit deletions to only this term. Required if batch mode is enabled."
										},
										{
											"key": "multi_term_batch_mode",
											"value": "false",
											"description": "Runs batch mode against all terms in terms file. Requires change_threshold."
										},
										{
											"key": "skip_deletes",
											"value": "false",
											"description": "When set the import will skip any deletes. This does not account for objects that are deleted during the batch mode cleanup process"
										},
										{
											"key": "override_sis_stickiness",
											"value": "true",
											"description": "Many fields on records in Canvas can be marked “sticky,” which means that when something changes in the UI apart from the SIS, that field gets “stuck.” In this way, by default, SIS imports do not override UI changes. If this field is present, however, it will tell the SIS import to ignore “stickiness” and override all fields."
										},
										{
											"key": "add_sis_stickiness",
											"value": "true",
											"description": "This option, if present, will process all changes as if they were UI changes. This means that “stickiness” will be added to changed fields. This option is only processed if 'override_sis_stickiness' is also provided"
										},
										{
											"key": "clear_sis_stickiness",
											"value": "true",
											"description": "This option, if present, will clear “stickiness” from all fields touched by this import. Requires that 'override_sis_stickiness' is also provided. If 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will overrule the behavior of 'add_sis_stickiness'"
										},
										{
											"key": "diffing_data_set_identifier",
											"value": "true",
											"description": "If set on a CSV import, Canvas will attempt to optimize the SIS import by comparing this set of CSVs to the previous set that has the same data set identifier, and only applying the difference between the two. See the SIS CSV Format documentation for more details. Diffing cannot be used with batch_mode"
										},
										{
											"key": "diffing_remaster_data_set",
											"value": "false",
											"description": "If true, and diffing_data_set_identifier is sent, this SIS import will be part of the data set, but diffing will not be performed. See the SIS CSV Format documentation for details."
										},
										{
											"key": "diffing_drop_status",
											"value": "deleted",
											"description": "If diffing_drop_status is passed, this SIS import will use this status for enrollments that are not included in the sis_batch. Defaults to 'deleted'\n\nAllowed values:\ndeleted, completed, inactive"
										},
										{
											"key": "change_threshold",
											"value": "100",
											"description": "If set with batch_mode, the batch cleanup process will not run if the number of items deleted is higher than the percentage set. If set to 10 and a term has 200 enrollments, and batch would delete more than 20 of the enrollments the batch will abort before the enrollments are deleted. The change_threshold will be evaluated for course, sections, and enrollments independently. If set with diffing, diffing will not be performed if the files are greater than the threshold as a percent. If set to 5 and the file is more than 5% smaller or more than 5% larger than the file that is being compared to, diffing will not be performed. If the files are less than 5%, diffing will be performed. The way the percent is calculated is by taking the size of the current import and dividing it by the size of the previous import. The formula used is: |(1 - current_file_size / previous_file_size)| * 100 See the SIS CSV Format documentation for more details. Required for multi_term_batch_m"
										},
										{
											"key": "diff_row_count_threshold",
											"value": "100",
											"description": "If set with diffing, diffing will not be performed if the number of rows to be run in the fully calculated diff import exceeds the threshold."
										}
									],
									"variable": [
										{
											"key": "account_id",
											"value": "",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										}
									]
								},
								"description": "Import SIS data into Canvas. Must be on a root account with SIS imports enabled.\n\nFor more information on the format that's expected here, please see the “SIS CSV” section in the API docs."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/zip"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports.json?import_type=instructure_csv&extension=zip&batch_mode=false&batch_mode_term_id=1900&multi_term_batch_mode=false&skip_deletes=false&override_sis_stickiness=true&add_sis_stickiness=true&clear_sis_stickiness=true&diffing_data_set_identifier=true&diffing_remaster_data_set=false&diffing_drop_status=deleted&change_threshold=100&diff_row_count_threshold=100",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sis_imports.json"
											],
											"query": [
												{
													"key": "import_type",
													"value": "instructure_csv",
													"description": "Choose the data format for reading SIS data. With a standard Canvas install, this option can only be 'instructure_csv', and if unprovided, will be assumed to be so. Can be part of the query string."
												},
												{
													"key": "extension",
													"value": "zip",
													"description": "There are two ways to post SIS import data - either via a multipart/form-data form-field-style attachment, or via a non-multipart raw post request.\n\n'attachment' is required for multipart/form-data style posts. Assumed to be SIS data from a file upload form field named 'attachment'."
												},
												{
													"key": "batch_mode",
													"value": "false",
													"description": "If set, this SIS import will be run in batch mode, deleting any data previously imported via SIS that is not present in this latest import. See the SIS CSV Format page for details. Batch mode cannot be used with diffing"
												},
												{
													"key": "batch_mode_term_id",
													"value": "1900",
													"description": "Limit deletions to only this term. Required if batch mode is enabled."
												},
												{
													"key": "multi_term_batch_mode",
													"value": "false",
													"description": "Runs batch mode against all terms in terms file. Requires change_threshold."
												},
												{
													"key": "skip_deletes",
													"value": "false",
													"description": "When set the import will skip any deletes. This does not account for objects that are deleted during the batch mode cleanup process"
												},
												{
													"key": "override_sis_stickiness",
													"value": "true",
													"description": "Many fields on records in Canvas can be marked “sticky,” which means that when something changes in the UI apart from the SIS, that field gets “stuck.” In this way, by default, SIS imports do not override UI changes. If this field is present, however, it will tell the SIS import to ignore “stickiness” and override all fields."
												},
												{
													"key": "add_sis_stickiness",
													"value": "true",
													"description": "This option, if present, will process all changes as if they were UI changes. This means that “stickiness” will be added to changed fields. This option is only processed if 'override_sis_stickiness' is also provided"
												},
												{
													"key": "clear_sis_stickiness",
													"value": "true",
													"description": "This option, if present, will clear “stickiness” from all fields touched by this import. Requires that 'override_sis_stickiness' is also provided. If 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will overrule the behavior of 'add_sis_stickiness'"
												},
												{
													"key": "diffing_data_set_identifier",
													"value": "true",
													"description": "If set on a CSV import, Canvas will attempt to optimize the SIS import by comparing this set of CSVs to the previous set that has the same data set identifier, and only applying the difference between the two. See the SIS CSV Format documentation for more details. Diffing cannot be used with batch_mode"
												},
												{
													"key": "diffing_remaster_data_set",
													"value": "false",
													"description": "If true, and diffing_data_set_identifier is sent, this SIS import will be part of the data set, but diffing will not be performed. See the SIS CSV Format documentation for details."
												},
												{
													"key": "diffing_drop_status",
													"value": "deleted",
													"description": "If diffing_drop_status is passed, this SIS import will use this status for enrollments that are not included in the sis_batch. Defaults to 'deleted'\n\nAllowed values:\ndeleted, completed, inactive"
												},
												{
													"key": "change_threshold",
													"value": "100",
													"description": "If set with batch_mode, the batch cleanup process will not run if the number of items deleted is higher than the percentage set. If set to 10 and a term has 200 enrollments, and batch would delete more than 20 of the enrollments the batch will abort before the enrollments are deleted. The change_threshold will be evaluated for course, sections, and enrollments independently. If set with diffing, diffing will not be performed if the files are greater than the threshold as a percent. If set to 5 and the file is more than 5% smaller or more than 5% larger than the file that is being compared to, diffing will not be performed. If the files are less than 5%, diffing will be performed. The way the percent is calculated is by taking the size of the current import and dividing it by the size of the previous import. The formula used is: |(1 - current_file_size / previous_file_size)| * 100 See the SIS CSV Format documentation for more details. Required for multi_term_batch_m"
												},
												{
													"key": "diff_row_count_threshold",
													"value": "100",
													"description": "If set with diffing, diffing will not be performed if the number of rows to be run in the fully calculated diff import exceeds the threshold."
												}
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"created_at\": \"2013-12-01T23:59:00-06:00\",\n    \"ended_at\": \"2013-12-02T00:03:21-06:00\",\n    \"updated_at\": \"2013-12-02T00:03:21-06:00\",\n    \"workflow_state\": \"imported\",\n    \"data\": null,\n    \"statistics\": null,\n    \"progress\": \"100\",\n    \"errors_attachment\": null,\n    \"user\": null,\n    \"processing_warnings\": [\n        [\n            \"students.csv\",\n            \"user John Doe has already claimed john_doe's requested login information, skipping\"\n        ]\n    ],\n    \"processing_errors\": [\n        [\n            \"students.csv\",\n            \"Error while importing CSV. Please contact support.\"\n        ]\n    ],\n    \"batch_mode\": true,\n    \"batch_mode_term_id\": \"1234\",\n    \"multi_term_batch_mode\": false,\n    \"skip_deletes\": false,\n    \"override_sis_stickiness\": false,\n    \"add_sis_stickiness\": false,\n    \"clear_sis_stickiness\": false,\n    \"diffing_data_set_identifier\": \"account-5-enrollments\",\n    \"diffed_against_import_id\": 1,\n    \"csv_attachments\": []\n}"
								}
							]
						},
						{
							"name": "Canvas - Abort SIS Import",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/zip"
									}
								],
								"body": {
									"mode": "file",
									"file": {}
								},
								"url": {
									"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/:id/abort",
									"host": [
										"{{canvas_domain}}"
									],
									"path": [
										"api",
										"v1",
										"accounts",
										":account_id",
										"sis_imports",
										":id",
										"abort"
									],
									"variable": [
										{
											"key": "account_id",
											"value": "1",
											"type": "string",
											"description": "Account ID or SIS Account ID"
										},
										{
											"key": "id",
											"value": "12",
											"type": "string",
											"description": "Import ID"
										}
									]
								},
								"description": "Abort a SIS import that has not completed.\n\nAborting a sis batch that is running can take some time for every process to see the abort event. Subsequent sis batches begin to process 10 minutes after the abort to allow each process to clean up properly."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/zip"
											}
										],
										"body": {
											"mode": "file",
											"file": {}
										},
										"url": {
											"raw": "{{canvas_domain}}/api/v1/accounts/:account_id/sis_imports/:id/abort",
											"host": [
												"{{canvas_domain}}"
											],
											"path": [
												"api",
												"v1",
												"accounts",
												":account_id",
												"sis_imports",
												":id",
												"abort"
											],
											"variable": [
												{
													"key": "account_id",
													"value": "",
													"description": "Account ID or SIS Account ID"
												},
												{
													"key": "id",
													"value": "",
													"description": "Import ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"id\": 1,\n    \"created_at\": \"2013-12-01T23:59:00-06:00\",\n    \"ended_at\": \"2013-12-02T00:03:21-06:00\",\n    \"updated_at\": \"2013-12-02T00:03:21-06:00\",\n    \"workflow_state\": \"imported\",\n    \"data\": null,\n    \"statistics\": null,\n    \"progress\": \"100\",\n    \"errors_attachment\": null,\n    \"user\": null,\n    \"processing_warnings\": [\n        [\n            \"students.csv\",\n            \"user John Doe has already claimed john_doe's requested login information, skipping\"\n        ]\n    ],\n    \"processing_errors\": [\n        [\n            \"students.csv\",\n            \"Error while importing CSV. Please contact support.\"\n        ]\n    ],\n    \"batch_mode\": true,\n    \"batch_mode_term_id\": \"1234\",\n    \"multi_term_batch_mode\": false,\n    \"skip_deletes\": false,\n    \"override_sis_stickiness\": false,\n    \"add_sis_stickiness\": false,\n    \"clear_sis_stickiness\": false,\n    \"diffing_data_set_identifier\": \"account-5-enrollments\",\n    \"diffed_against_import_id\": 1,\n    \"csv_attachments\": []\n}"
								}
							]
						}
					]
				}
			]
		}
	]
}